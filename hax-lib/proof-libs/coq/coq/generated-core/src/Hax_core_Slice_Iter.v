(* File automatically generated by Hacspec *)
From Coq Require Import ZArith.
Require Import List.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.
Require Import Ascii.
Require Import String.
Require Import Coq.Floats.Floats.
From RecordUpdate Require Import RecordSet.
Import RecordSetNotations.
From Core Require Import Core.

(* NotImplementedYet *)





Record Iter_Iter_record (v_T : Type) `{core.marker.t_Sized (v_T)} : Type :=
  {
    Iter_Iter_f_Iter_data : hax_core.primitive.primitive_definitions.t_Slice ((v_T));
    Iter_Iter_f_Iter_e_marker : core.marker.t_PhantomData ((v_T));
  }.
Arguments Build_Iter_Iter_record {_} {_}.
Arguments Iter_Iter_f_Iter_data {_} {_}.
Arguments Iter_Iter_f_Iter_e_marker {_} {_}.
#[export] Instance settable_Iter_Iter_record `{v_T : Type} `{core.marker.t_Sized (v_T)} : Settable _ :=
  settable! (Build_Iter_Iter_record (v_T := v_T)) <Iter_Iter_f_Iter_data; Iter_Iter_f_Iter_e_marker>.

Definition impl__new `{v_T : Type} `{core.marker.t_Sized (v_T)} `{core.clone.t_Clone (v_T)} (slice : hax_core.primitive.primitive_definitions.t_Slice ((v_T))) : t_Iter ((v_T)) :=
  Iter_Iter (core.clone.Clone__f_clone (slice)) (core.marker.PhantomData_PhantomData).

Instance core.clone.t_Clone_441154292 `{v_T : Type} `{core.marker.t_Sized (v_T)} `{core.clone.t_Clone (v_T)} : core.clone.t_Clone ((t_Iter ((v_T)))) :=
  {
    implaabbcc_t_Clone_impl_1__f_clone := fun  (self : t_Iter ((v_T)))=>
      Iter_Iter (core.clone.Clone__f_clone (f_Iter_data self)) (f_Iter_e_marker self);
  }.
