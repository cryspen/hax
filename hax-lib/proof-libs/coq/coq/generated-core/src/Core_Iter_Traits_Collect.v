(* File automatically generated by Hacspec *)
From Coq Require Import ZArith.
Require Import List.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.
Require Import Ascii.
Require Import String.
Require Import Coq.Floats.Floats.
From RecordUpdate Require Import RecordSet.
Import RecordSetNotations.
From Core Require Import Core.

(* NotImplementedYet *)



Class t_IntoIterator (v_Self : Type) : Type :=
  {
    IntoIterator__f_Item : Type;
    _ :: `{Core_Marker.t_Sized (IntoIterator__f_Item)};
    IntoIterator__f_IntoIter `{_.(Core_Iter_Traits_Iterator.Iterator__f_Item) = IntoIterator__f_Item} : Type;
    _ :: `{Core_Marker.t_Sized (IntoIterator__f_IntoIter)};
    _ :: `{Core_Iter_Traits_Iterator.t_Iterator (IntoIterator__f_IntoIter)};
    IntoIterator__f_into_iter : v_Self -> IntoIterator__f_IntoIter;
  }.
Arguments t_IntoIterator (_).

Class t_FromIterator (v_Self : Type) (v_A : Type) `{Core_Marker.t_Sized (v_Self)} `{Core_Marker.t_Sized (v_A)} : Type :=
  {
    FromIterator__f_from_iter v_T : Type `{Core_Marker.t_Sized (v_T)} `{t_IntoIterator (v_T)} `{_.(IntoIterator__f_Item) = v_A} : v_T -> v_Self;
  }.
Arguments t_FromIterator (_) (_) {_} {_}.

Instance t_IntoIterator_225021885 `{v_I : Type} `{Core_Marker.t_Sized (v_I)} `{Core_Iter_Traits_Iterator.t_Iterator (v_I)} : t_IntoIterator ((v_I)) :=
  {
    implaabbcc_t_IntoIterator_impl__f_Item := Core_Iter_Traits_Iterator.Iterator__f_Item;
    implaabbcc_t_IntoIterator_impl__f_IntoIter := v_I;
    implaabbcc_t_IntoIterator_impl__f_into_iter := fun  (self : v_I)=>
      self;
  }.
