(* File automatically generated by Hacspec *)
From Coq Require Import ZArith.
Require Import List.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.
Require Import Ascii.
Require Import String.
Require Import Coq.Floats.Floats.
From RecordUpdate Require Import RecordSet.
Import RecordSetNotations.
From Core Require Import Core.

(* NotImplementedYet *)

Inductive t_Never : Type :=
.

Definition t_Never_cast_to_repr (x : t_Never) : rust_primitives.hax.t_Never :=
  match x with
  end.

Definition never_to_any `{v_T : Type} `{core.marker.t_Sized (v_T)} (x : t_Never) : v_T :=
  rust_primitives.hax.never_to_any (match x with
  end).









Definition panic_fmt (fmt : core.fmt.t_Arguments) : rust_primitives.hax.t_Never :=
  core.panicking.panic_fmt (fmt).

Definition panic (expr : string) : rust_primitives.hax.t_Never :=
  panic_fmt (core.fmt.rt.impl_1__new_const ([expr])).

Definition panic_display `{v_T : Type} `{core.marker.t_Sized (v_T)} `{core.fmt.t_Display (v_T)} (x : v_T) : rust_primitives.hax.t_Never :=
  let args := [core.fmt.rt.impl__new_display (x)] in
  panic_fmt (core.fmt.rt.impl_1__new_v1 ([(""%string : string)]) (args)).

Definition panic_explicit '(_ : unit) : rust_primitives.hax.t_Never :=
  panic_display (("explicit panic"%string : string)).

Inductive t_AssertKind : Type :=
| AssertKind_Eq
| AssertKind_Ne
| AssertKind_Match.




Definition t_AssertKind_cast_to_repr (x : t_AssertKind) : t_isize :=
  match x with
  | AssertKind_Eq =>
    (0 : t_isize)
  | AssertKind_Ne =>
    (1 : t_isize)
  | AssertKind_Match =>
    (2 : t_isize)
  end.


