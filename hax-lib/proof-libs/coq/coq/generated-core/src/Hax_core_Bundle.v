(* File automatically generated by Hacspec *)
From Coq Require Import ZArith.
Require Import List.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.
Require Import Ascii.
Require Import String.
Require Import Coq.Floats.Floats.
From RecordUpdate Require Import RecordSet.
Import RecordSetNotations.
From Core Require Import Core.

Definition wrapping_add_u8 (a : hax_core.primitive.primitive_definitions.t_u8) (b : hax_core.primitive.primitive_definitions.t_u8) : hax_core.primitive.primitive_definitions.t_u8 :=
  hax_core.primitive.primitive_definitions.Build_t__u8_u8 (core.ops.arith.Add__f_add (hax_core.primitive.primitive_definitions.0 a) (hax_core.primitive.primitive_definitions.0 b)).

Definition wrapping_sub_u8 (a : hax_core.primitive.primitive_definitions.t_u8) (b : hax_core.primitive.primitive_definitions.t_u8) : hax_core.primitive.primitive_definitions.t_u8 :=
  hax_core.primitive.primitive_definitions.Build_t__u8_u8 (core.ops.arith.Sub__f_sub (hax_core.primitive.primitive_definitions.0 a) (hax_core.primitive.primitive_definitions.0 b)).

Definition wrapping_mul_u8 (a : hax_core.primitive.primitive_definitions.t_u8) (b : hax_core.primitive.primitive_definitions.t_u8) : hax_core.primitive.primitive_definitions.t_u8 :=
  hax_core.primitive.primitive_definitions.Build_t__u8_u8 (core.ops.arith.Mul__f_mul (hax_core.primitive.primitive_definitions.0 a) (hax_core.primitive.primitive_definitions.0 b)).

Definition three_way_compare_u8 `{v_T : Type} `{core.marker.t_Sized (v_T)} `{core.marker.t_Copy (v_T)} (lhs : hax_core.primitive.primitive_definitions.t_u8) (rhs : hax_core.primitive.primitive_definitions.t_u8) : core.cmp.t_Ordering :=
  core.cmp.Ord__f_cmp (lhs) (rhs).

Definition add_with_overflow_u8 (x : hax_core.primitive.primitive_definitions.t_u8) (y : hax_core.primitive.primitive_definitions.t_u8) : (hax_core.primitive.primitive_definitions.t_u8*bool) :=
  let overflow := hax_core.base.pos.haxint_add (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 x)) (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 y)) in
  let res : hax_core.base_interface.int.t_U8 := hax_core.base_interface.coerce.Concretization__f_concretize (core.clone.Clone__f_clone (overflow)) in
  (hax_core.primitive.primitive_definitions.Build_t__u8_u8 (core.clone.Clone__f_clone (res)),hax_core.base.pos.haxint_lt (hax_core.base_interface.coerce.Abstraction__f_lift (res)) (overflow)).

Definition unchecked_div_u8 (x : hax_core.primitive.primitive_definitions.t_u8) (y : hax_core.primitive.primitive_definitions.t_u8) : hax_core.primitive.primitive_definitions.t_u8 :=
  hax_core.primitive.primitive_definitions.Build_t__u8_u8 (hax_core.base_interface.int.U8_U8 (hax_core.base.pos.haxint_div (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 x)) (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 y)))).

Definition unchecked_add_u8 (x : hax_core.primitive.primitive_definitions.t_u8) (y : hax_core.primitive.primitive_definitions.t_u8) : hax_core.primitive.primitive_definitions.t_u8 :=
  hax_core.primitive.primitive_definitions.Build_t__u8_u8 (hax_core.base_interface.int.U8_U8 (hax_core.base.pos.haxint_add (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 x)) (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 y)))).

Definition wrapping_add_u16 (a : hax_core.primitive.primitive_definitions.t_u16) (b : hax_core.primitive.primitive_definitions.t_u16) : hax_core.primitive.primitive_definitions.t_u16 :=
  hax_core.primitive.primitive_definitions.Build_t__u16_u16 (core.ops.arith.Add__f_add (hax_core.primitive.primitive_definitions.0 a) (hax_core.primitive.primitive_definitions.0 b)).

Definition wrapping_sub_u16 (a : hax_core.primitive.primitive_definitions.t_u16) (b : hax_core.primitive.primitive_definitions.t_u16) : hax_core.primitive.primitive_definitions.t_u16 :=
  hax_core.primitive.primitive_definitions.Build_t__u16_u16 (core.ops.arith.Sub__f_sub (hax_core.primitive.primitive_definitions.0 a) (hax_core.primitive.primitive_definitions.0 b)).

Definition wrapping_mul_u16 (a : hax_core.primitive.primitive_definitions.t_u16) (b : hax_core.primitive.primitive_definitions.t_u16) : hax_core.primitive.primitive_definitions.t_u16 :=
  hax_core.primitive.primitive_definitions.Build_t__u16_u16 (core.ops.arith.Mul__f_mul (hax_core.primitive.primitive_definitions.0 a) (hax_core.primitive.primitive_definitions.0 b)).

Definition three_way_compare_u16 `{v_T : Type} `{core.marker.t_Sized (v_T)} `{core.marker.t_Copy (v_T)} (lhs : hax_core.primitive.primitive_definitions.t_u16) (rhs : hax_core.primitive.primitive_definitions.t_u16) : core.cmp.t_Ordering :=
  core.cmp.Ord__f_cmp (lhs) (rhs).

Definition add_with_overflow_u16 (x : hax_core.primitive.primitive_definitions.t_u16) (y : hax_core.primitive.primitive_definitions.t_u16) : (hax_core.primitive.primitive_definitions.t_u16*bool) :=
  let overflow := hax_core.base.pos.haxint_add (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 x)) (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 y)) in
  let res : hax_core.base_interface.int.t_U16 := hax_core.base_interface.coerce.Concretization__f_concretize (core.clone.Clone__f_clone (overflow)) in
  (hax_core.primitive.primitive_definitions.Build_t__u16_u16 (core.clone.Clone__f_clone (res)),hax_core.base.pos.haxint_lt (hax_core.base_interface.coerce.Abstraction__f_lift (res)) (overflow)).

Definition unchecked_div_u16 (x : hax_core.primitive.primitive_definitions.t_u16) (y : hax_core.primitive.primitive_definitions.t_u16) : hax_core.primitive.primitive_definitions.t_u16 :=
  hax_core.primitive.primitive_definitions.Build_t__u16_u16 (hax_core.base_interface.int.U16_U16 (hax_core.base.pos.haxint_div (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 x)) (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 y)))).

Definition unchecked_add_u16 (x : hax_core.primitive.primitive_definitions.t_u16) (y : hax_core.primitive.primitive_definitions.t_u16) : hax_core.primitive.primitive_definitions.t_u16 :=
  hax_core.primitive.primitive_definitions.Build_t__u16_u16 (hax_core.base_interface.int.U16_U16 (hax_core.base.pos.haxint_add (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 x)) (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 y)))).

Definition wrapping_add_u32 (a : hax_core.primitive.primitive_definitions.t_u32) (b : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u32 :=
  hax_core.primitive.primitive_definitions.Build_t__u32_u32 (core.ops.arith.Add__f_add (hax_core.primitive.primitive_definitions.0 a) (hax_core.primitive.primitive_definitions.0 b)).

Definition wrapping_sub_u32 (a : hax_core.primitive.primitive_definitions.t_u32) (b : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u32 :=
  hax_core.primitive.primitive_definitions.Build_t__u32_u32 (core.ops.arith.Sub__f_sub (hax_core.primitive.primitive_definitions.0 a) (hax_core.primitive.primitive_definitions.0 b)).

Definition wrapping_mul_u32 (a : hax_core.primitive.primitive_definitions.t_u32) (b : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u32 :=
  hax_core.primitive.primitive_definitions.Build_t__u32_u32 (core.ops.arith.Mul__f_mul (hax_core.primitive.primitive_definitions.0 a) (hax_core.primitive.primitive_definitions.0 b)).

Definition three_way_compare_u32 `{v_T : Type} `{core.marker.t_Sized (v_T)} `{core.marker.t_Copy (v_T)} (lhs : hax_core.primitive.primitive_definitions.t_u32) (rhs : hax_core.primitive.primitive_definitions.t_u32) : core.cmp.t_Ordering :=
  core.cmp.Ord__f_cmp (lhs) (rhs).

Definition add_with_overflow_u32 (x : hax_core.primitive.primitive_definitions.t_u32) (y : hax_core.primitive.primitive_definitions.t_u32) : (hax_core.primitive.primitive_definitions.t_u32*bool) :=
  let overflow := hax_core.base.pos.haxint_add (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 x)) (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 y)) in
  let res : hax_core.base_interface.int.t_U32 := hax_core.base_interface.coerce.Concretization__f_concretize (core.clone.Clone__f_clone (overflow)) in
  (hax_core.primitive.primitive_definitions.Build_t__u32_u32 (core.clone.Clone__f_clone (res)),hax_core.base.pos.haxint_lt (hax_core.base_interface.coerce.Abstraction__f_lift (res)) (overflow)).

Definition unchecked_div_u32 (x : hax_core.primitive.primitive_definitions.t_u32) (y : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u32 :=
  hax_core.primitive.primitive_definitions.Build_t__u32_u32 (hax_core.base_interface.int.U32_U32 (hax_core.base.pos.haxint_div (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 x)) (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 y)))).

Definition unchecked_add_u32 (x : hax_core.primitive.primitive_definitions.t_u32) (y : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u32 :=
  hax_core.primitive.primitive_definitions.Build_t__u32_u32 (hax_core.base_interface.int.U32_U32 (hax_core.base.pos.haxint_add (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 x)) (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 y)))).

Definition wrapping_add_u64 (a : hax_core.primitive.primitive_definitions.t_u64) (b : hax_core.primitive.primitive_definitions.t_u64) : hax_core.primitive.primitive_definitions.t_u64 :=
  hax_core.primitive.primitive_definitions.Build_t__u64_u64 (core.ops.arith.Add__f_add (hax_core.primitive.primitive_definitions.0 a) (hax_core.primitive.primitive_definitions.0 b)).

Definition wrapping_sub_u64 (a : hax_core.primitive.primitive_definitions.t_u64) (b : hax_core.primitive.primitive_definitions.t_u64) : hax_core.primitive.primitive_definitions.t_u64 :=
  hax_core.primitive.primitive_definitions.Build_t__u64_u64 (core.ops.arith.Sub__f_sub (hax_core.primitive.primitive_definitions.0 a) (hax_core.primitive.primitive_definitions.0 b)).

Definition wrapping_mul_u64 (a : hax_core.primitive.primitive_definitions.t_u64) (b : hax_core.primitive.primitive_definitions.t_u64) : hax_core.primitive.primitive_definitions.t_u64 :=
  hax_core.primitive.primitive_definitions.Build_t__u64_u64 (core.ops.arith.Mul__f_mul (hax_core.primitive.primitive_definitions.0 a) (hax_core.primitive.primitive_definitions.0 b)).

Definition three_way_compare_u64 `{v_T : Type} `{core.marker.t_Sized (v_T)} `{core.marker.t_Copy (v_T)} (lhs : hax_core.primitive.primitive_definitions.t_u64) (rhs : hax_core.primitive.primitive_definitions.t_u64) : core.cmp.t_Ordering :=
  core.cmp.Ord__f_cmp (lhs) (rhs).

Definition add_with_overflow_u64 (x : hax_core.primitive.primitive_definitions.t_u64) (y : hax_core.primitive.primitive_definitions.t_u64) : (hax_core.primitive.primitive_definitions.t_u64*bool) :=
  let overflow := hax_core.base.pos.haxint_add (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 x)) (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 y)) in
  let res : hax_core.base_interface.int.t_U64 := hax_core.base_interface.coerce.Concretization__f_concretize (core.clone.Clone__f_clone (overflow)) in
  (hax_core.primitive.primitive_definitions.Build_t__u64_u64 (core.clone.Clone__f_clone (res)),hax_core.base.pos.haxint_lt (hax_core.base_interface.coerce.Abstraction__f_lift (res)) (overflow)).

Definition unchecked_div_u64 (x : hax_core.primitive.primitive_definitions.t_u64) (y : hax_core.primitive.primitive_definitions.t_u64) : hax_core.primitive.primitive_definitions.t_u64 :=
  hax_core.primitive.primitive_definitions.Build_t__u64_u64 (hax_core.base_interface.int.U64_U64 (hax_core.base.pos.haxint_div (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 x)) (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 y)))).

Definition unchecked_add_u64 (x : hax_core.primitive.primitive_definitions.t_u64) (y : hax_core.primitive.primitive_definitions.t_u64) : hax_core.primitive.primitive_definitions.t_u64 :=
  hax_core.primitive.primitive_definitions.Build_t__u64_u64 (hax_core.base_interface.int.U64_U64 (hax_core.base.pos.haxint_add (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 x)) (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 y)))).

Definition wrapping_add_u128 (a : hax_core.primitive.primitive_definitions.t_u128) (b : hax_core.primitive.primitive_definitions.t_u128) : hax_core.primitive.primitive_definitions.t_u128 :=
  hax_core.primitive.primitive_definitions.Build_t__u128_u128 (core.ops.arith.Add__f_add (hax_core.primitive.primitive_definitions.0 a) (hax_core.primitive.primitive_definitions.0 b)).

Definition wrapping_sub_u128 (a : hax_core.primitive.primitive_definitions.t_u128) (b : hax_core.primitive.primitive_definitions.t_u128) : hax_core.primitive.primitive_definitions.t_u128 :=
  hax_core.primitive.primitive_definitions.Build_t__u128_u128 (core.ops.arith.Sub__f_sub (hax_core.primitive.primitive_definitions.0 a) (hax_core.primitive.primitive_definitions.0 b)).

Definition wrapping_mul_u128 (a : hax_core.primitive.primitive_definitions.t_u128) (b : hax_core.primitive.primitive_definitions.t_u128) : hax_core.primitive.primitive_definitions.t_u128 :=
  hax_core.primitive.primitive_definitions.Build_t__u128_u128 (core.ops.arith.Mul__f_mul (hax_core.primitive.primitive_definitions.0 a) (hax_core.primitive.primitive_definitions.0 b)).

Definition three_way_compare_u128 `{v_T : Type} `{core.marker.t_Sized (v_T)} `{core.marker.t_Copy (v_T)} (lhs : hax_core.primitive.primitive_definitions.t_u128) (rhs : hax_core.primitive.primitive_definitions.t_u128) : core.cmp.t_Ordering :=
  core.cmp.Ord__f_cmp (lhs) (rhs).

Definition add_with_overflow_u128 (x : hax_core.primitive.primitive_definitions.t_u128) (y : hax_core.primitive.primitive_definitions.t_u128) : (hax_core.primitive.primitive_definitions.t_u128*bool) :=
  let overflow := hax_core.base.pos.haxint_add (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 x)) (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 y)) in
  let res : hax_core.base_interface.int.t_U128 := hax_core.base_interface.coerce.Concretization__f_concretize (core.clone.Clone__f_clone (overflow)) in
  (hax_core.primitive.primitive_definitions.Build_t__u128_u128 (core.clone.Clone__f_clone (res)),hax_core.base.pos.haxint_lt (hax_core.base_interface.coerce.Abstraction__f_lift (res)) (overflow)).

Definition unchecked_div_u128 (x : hax_core.primitive.primitive_definitions.t_u128) (y : hax_core.primitive.primitive_definitions.t_u128) : hax_core.primitive.primitive_definitions.t_u128 :=
  hax_core.primitive.primitive_definitions.Build_t__u128_u128 (hax_core.base_interface.int.U128_U128 (hax_core.base.pos.haxint_div (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 x)) (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 y)))).

Definition unchecked_add_u128 (x : hax_core.primitive.primitive_definitions.t_u128) (y : hax_core.primitive.primitive_definitions.t_u128) : hax_core.primitive.primitive_definitions.t_u128 :=
  hax_core.primitive.primitive_definitions.Build_t__u128_u128 (hax_core.base_interface.int.U128_U128 (hax_core.base.pos.haxint_add (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 x)) (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 y)))).

Definition wrapping_add_usize (a : hax_core.primitive.primitive_definitions.t_usize) (b : hax_core.primitive.primitive_definitions.t_usize) : hax_core.primitive.primitive_definitions.t_usize :=
  hax_core.primitive.primitive_definitions.Build_t__usize_usize (core.ops.arith.Add__f_add (hax_core.primitive.primitive_definitions.0 a) (hax_core.primitive.primitive_definitions.0 b)).

Definition wrapping_sub_usize (a : hax_core.primitive.primitive_definitions.t_usize) (b : hax_core.primitive.primitive_definitions.t_usize) : hax_core.primitive.primitive_definitions.t_usize :=
  hax_core.primitive.primitive_definitions.Build_t__usize_usize (core.ops.arith.Sub__f_sub (hax_core.primitive.primitive_definitions.0 a) (hax_core.primitive.primitive_definitions.0 b)).

Definition wrapping_mul_usize (a : hax_core.primitive.primitive_definitions.t_usize) (b : hax_core.primitive.primitive_definitions.t_usize) : hax_core.primitive.primitive_definitions.t_usize :=
  hax_core.primitive.primitive_definitions.Build_t__usize_usize (core.ops.arith.Mul__f_mul (hax_core.primitive.primitive_definitions.0 a) (hax_core.primitive.primitive_definitions.0 b)).

Definition three_way_compare_usize `{v_T : Type} `{core.marker.t_Sized (v_T)} `{core.marker.t_Copy (v_T)} (lhs : hax_core.primitive.primitive_definitions.t_usize) (rhs : hax_core.primitive.primitive_definitions.t_usize) : core.cmp.t_Ordering :=
  core.cmp.Ord__f_cmp (lhs) (rhs).

Definition add_with_overflow_usize (x : hax_core.primitive.primitive_definitions.t_usize) (y : hax_core.primitive.primitive_definitions.t_usize) : (hax_core.primitive.primitive_definitions.t_usize*bool) :=
  let overflow := hax_core.base.pos.haxint_add (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 x)) (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 y)) in
  let res : hax_core.base_interface.int.t_U64 := hax_core.base_interface.coerce.Concretization__f_concretize (core.clone.Clone__f_clone (overflow)) in
  (hax_core.primitive.primitive_definitions.Build_t__usize_usize (core.clone.Clone__f_clone (res)),hax_core.base.pos.haxint_lt (hax_core.base_interface.coerce.Abstraction__f_lift (res)) (overflow)).

Definition unchecked_div_usize (x : hax_core.primitive.primitive_definitions.t_usize) (y : hax_core.primitive.primitive_definitions.t_usize) : hax_core.primitive.primitive_definitions.t_usize :=
  hax_core.primitive.primitive_definitions.Build_t__usize_usize (hax_core.base_interface.int.U64_U64 (hax_core.base.pos.haxint_div (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 x)) (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 y)))).

Definition unchecked_add_usize (x : hax_core.primitive.primitive_definitions.t_usize) (y : hax_core.primitive.primitive_definitions.t_usize) : hax_core.primitive.primitive_definitions.t_usize :=
  hax_core.primitive.primitive_definitions.Build_t__usize_usize (hax_core.base_interface.int.U64_U64 (hax_core.base.pos.haxint_add (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 x)) (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 y)))).

Definition wrapping_add_i8 (a : hax_core.primitive.primitive_definitions.t_i8) (b : hax_core.primitive.primitive_definitions.t_i8) : hax_core.primitive.primitive_definitions.t_i8 :=
  hax_core.primitive.primitive_definitions.Build_t__i8_i8 (core.ops.arith.Add__f_add (hax_core.primitive.primitive_definitions.0 a) (hax_core.primitive.primitive_definitions.0 b)).

Definition wrapping_sub_i8 (a : hax_core.primitive.primitive_definitions.t_i8) (b : hax_core.primitive.primitive_definitions.t_i8) : hax_core.primitive.primitive_definitions.t_i8 :=
  hax_core.primitive.primitive_definitions.Build_t__i8_i8 (core.ops.arith.Sub__f_sub (hax_core.primitive.primitive_definitions.0 a) (hax_core.primitive.primitive_definitions.0 b)).

Definition wrapping_mul_i8 (a : hax_core.primitive.primitive_definitions.t_i8) (b : hax_core.primitive.primitive_definitions.t_i8) : hax_core.primitive.primitive_definitions.t_i8 :=
  hax_core.primitive.primitive_definitions.Build_t__i8_i8 (core.ops.arith.Mul__f_mul (hax_core.primitive.primitive_definitions.0 a) (hax_core.primitive.primitive_definitions.0 b)).

Definition add_with_overflow_i8 (x : hax_core.primitive.primitive_definitions.t_i8) (y : hax_core.primitive.primitive_definitions.t_i8) : (hax_core.primitive.primitive_definitions.t_i8*bool) :=
  let overflow := hax_core.base.z.z_add (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 x)) (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 y)) in
  let res : hax_core.base_interface.int.t_I8 := hax_core.base_interface.coerce.Concretization__f_concretize (core.clone.Clone__f_clone (overflow)) in
  (hax_core.primitive.primitive_definitions.Build_t__i8_i8 (core.clone.Clone__f_clone (res)),hax_core.base.z.z_lt (hax_core.base_interface.coerce.Abstraction__f_lift (res)) (overflow)).

Definition unchecked_div_i8 (x : hax_core.primitive.primitive_definitions.t_i8) (y : hax_core.primitive.primitive_definitions.t_i8) : hax_core.primitive.primitive_definitions.t_i8 :=
  hax_core.primitive.primitive_definitions.Build_t__i8_i8 (hax_core.base_interface.int.I8_I8 (hax_core.base.z.z_div (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 x)) (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 y)))).

Definition unchecked_add_i8 (x : hax_core.primitive.primitive_definitions.t_i8) (y : hax_core.primitive.primitive_definitions.t_i8) : hax_core.primitive.primitive_definitions.t_i8 :=
  hax_core.primitive.primitive_definitions.Build_t__i8_i8 (hax_core.base_interface.int.I8_I8 (hax_core.base.z.z_add (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 x)) (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 y)))).

Definition wrapping_add_i16 (a : hax_core.primitive.primitive_definitions.t_i16) (b : hax_core.primitive.primitive_definitions.t_i16) : hax_core.primitive.primitive_definitions.t_i16 :=
  hax_core.primitive.primitive_definitions.Build_t__i16_i16 (core.ops.arith.Add__f_add (hax_core.primitive.primitive_definitions.0 a) (hax_core.primitive.primitive_definitions.0 b)).

Definition wrapping_sub_i16 (a : hax_core.primitive.primitive_definitions.t_i16) (b : hax_core.primitive.primitive_definitions.t_i16) : hax_core.primitive.primitive_definitions.t_i16 :=
  hax_core.primitive.primitive_definitions.Build_t__i16_i16 (core.ops.arith.Sub__f_sub (hax_core.primitive.primitive_definitions.0 a) (hax_core.primitive.primitive_definitions.0 b)).

Definition wrapping_mul_i16 (a : hax_core.primitive.primitive_definitions.t_i16) (b : hax_core.primitive.primitive_definitions.t_i16) : hax_core.primitive.primitive_definitions.t_i16 :=
  hax_core.primitive.primitive_definitions.Build_t__i16_i16 (core.ops.arith.Mul__f_mul (hax_core.primitive.primitive_definitions.0 a) (hax_core.primitive.primitive_definitions.0 b)).

Definition add_with_overflow_i16 (x : hax_core.primitive.primitive_definitions.t_i16) (y : hax_core.primitive.primitive_definitions.t_i16) : (hax_core.primitive.primitive_definitions.t_i16*bool) :=
  let overflow := hax_core.base.z.z_add (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 x)) (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 y)) in
  let res : hax_core.base_interface.int.t_I16 := hax_core.base_interface.coerce.Concretization__f_concretize (core.clone.Clone__f_clone (overflow)) in
  (hax_core.primitive.primitive_definitions.Build_t__i16_i16 (core.clone.Clone__f_clone (res)),hax_core.base.z.z_lt (hax_core.base_interface.coerce.Abstraction__f_lift (res)) (overflow)).

Definition unchecked_div_i16 (x : hax_core.primitive.primitive_definitions.t_i16) (y : hax_core.primitive.primitive_definitions.t_i16) : hax_core.primitive.primitive_definitions.t_i16 :=
  hax_core.primitive.primitive_definitions.Build_t__i16_i16 (hax_core.base_interface.int.I16_I16 (hax_core.base.z.z_div (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 x)) (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 y)))).

Definition unchecked_add_i16 (x : hax_core.primitive.primitive_definitions.t_i16) (y : hax_core.primitive.primitive_definitions.t_i16) : hax_core.primitive.primitive_definitions.t_i16 :=
  hax_core.primitive.primitive_definitions.Build_t__i16_i16 (hax_core.base_interface.int.I16_I16 (hax_core.base.z.z_add (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 x)) (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 y)))).

Definition wrapping_add_i32 (a : hax_core.primitive.primitive_definitions.t_i32) (b : hax_core.primitive.primitive_definitions.t_i32) : hax_core.primitive.primitive_definitions.t_i32 :=
  hax_core.primitive.primitive_definitions.Build_t__i32_i32 (core.ops.arith.Add__f_add (hax_core.primitive.primitive_definitions.0 a) (hax_core.primitive.primitive_definitions.0 b)).

Definition wrapping_sub_i32 (a : hax_core.primitive.primitive_definitions.t_i32) (b : hax_core.primitive.primitive_definitions.t_i32) : hax_core.primitive.primitive_definitions.t_i32 :=
  hax_core.primitive.primitive_definitions.Build_t__i32_i32 (core.ops.arith.Sub__f_sub (hax_core.primitive.primitive_definitions.0 a) (hax_core.primitive.primitive_definitions.0 b)).

Definition wrapping_mul_i32 (a : hax_core.primitive.primitive_definitions.t_i32) (b : hax_core.primitive.primitive_definitions.t_i32) : hax_core.primitive.primitive_definitions.t_i32 :=
  hax_core.primitive.primitive_definitions.Build_t__i32_i32 (core.ops.arith.Mul__f_mul (hax_core.primitive.primitive_definitions.0 a) (hax_core.primitive.primitive_definitions.0 b)).

Definition add_with_overflow_i32 (x : hax_core.primitive.primitive_definitions.t_i32) (y : hax_core.primitive.primitive_definitions.t_i32) : (hax_core.primitive.primitive_definitions.t_i32*bool) :=
  let overflow := hax_core.base.z.z_add (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 x)) (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 y)) in
  let res : hax_core.base_interface.int.t_I32 := hax_core.base_interface.coerce.Concretization__f_concretize (core.clone.Clone__f_clone (overflow)) in
  (hax_core.primitive.primitive_definitions.Build_t__i32_i32 (core.clone.Clone__f_clone (res)),hax_core.base.z.z_lt (hax_core.base_interface.coerce.Abstraction__f_lift (res)) (overflow)).

Definition unchecked_div_i32 (x : hax_core.primitive.primitive_definitions.t_i32) (y : hax_core.primitive.primitive_definitions.t_i32) : hax_core.primitive.primitive_definitions.t_i32 :=
  hax_core.primitive.primitive_definitions.Build_t__i32_i32 (hax_core.base_interface.int.I32_I32 (hax_core.base.z.z_div (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 x)) (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 y)))).

Definition unchecked_add_i32 (x : hax_core.primitive.primitive_definitions.t_i32) (y : hax_core.primitive.primitive_definitions.t_i32) : hax_core.primitive.primitive_definitions.t_i32 :=
  hax_core.primitive.primitive_definitions.Build_t__i32_i32 (hax_core.base_interface.int.I32_I32 (hax_core.base.z.z_add (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 x)) (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 y)))).

Definition wrapping_add_i64 (a : hax_core.primitive.primitive_definitions.t_i64) (b : hax_core.primitive.primitive_definitions.t_i64) : hax_core.primitive.primitive_definitions.t_i64 :=
  hax_core.primitive.primitive_definitions.Build_t__i64_i64 (core.ops.arith.Add__f_add (hax_core.primitive.primitive_definitions.0 a) (hax_core.primitive.primitive_definitions.0 b)).

Definition wrapping_sub_i64 (a : hax_core.primitive.primitive_definitions.t_i64) (b : hax_core.primitive.primitive_definitions.t_i64) : hax_core.primitive.primitive_definitions.t_i64 :=
  hax_core.primitive.primitive_definitions.Build_t__i64_i64 (core.ops.arith.Sub__f_sub (hax_core.primitive.primitive_definitions.0 a) (hax_core.primitive.primitive_definitions.0 b)).

Definition wrapping_mul_i64 (a : hax_core.primitive.primitive_definitions.t_i64) (b : hax_core.primitive.primitive_definitions.t_i64) : hax_core.primitive.primitive_definitions.t_i64 :=
  hax_core.primitive.primitive_definitions.Build_t__i64_i64 (core.ops.arith.Mul__f_mul (hax_core.primitive.primitive_definitions.0 a) (hax_core.primitive.primitive_definitions.0 b)).

Definition add_with_overflow_i64 (x : hax_core.primitive.primitive_definitions.t_i64) (y : hax_core.primitive.primitive_definitions.t_i64) : (hax_core.primitive.primitive_definitions.t_i64*bool) :=
  let overflow := hax_core.base.z.z_add (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 x)) (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 y)) in
  let res : hax_core.base_interface.int.t_I64 := hax_core.base_interface.coerce.Concretization__f_concretize (core.clone.Clone__f_clone (overflow)) in
  (hax_core.primitive.primitive_definitions.Build_t__i64_i64 (core.clone.Clone__f_clone (res)),hax_core.base.z.z_lt (hax_core.base_interface.coerce.Abstraction__f_lift (res)) (overflow)).

Definition unchecked_div_i64 (x : hax_core.primitive.primitive_definitions.t_i64) (y : hax_core.primitive.primitive_definitions.t_i64) : hax_core.primitive.primitive_definitions.t_i64 :=
  hax_core.primitive.primitive_definitions.Build_t__i64_i64 (hax_core.base_interface.int.I64_I64 (hax_core.base.z.z_div (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 x)) (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 y)))).

Definition unchecked_add_i64 (x : hax_core.primitive.primitive_definitions.t_i64) (y : hax_core.primitive.primitive_definitions.t_i64) : hax_core.primitive.primitive_definitions.t_i64 :=
  hax_core.primitive.primitive_definitions.Build_t__i64_i64 (hax_core.base_interface.int.I64_I64 (hax_core.base.z.z_add (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 x)) (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 y)))).

Definition wrapping_add_i128 (a : hax_core.primitive.primitive_definitions.t_i128) (b : hax_core.primitive.primitive_definitions.t_i128) : hax_core.primitive.primitive_definitions.t_i128 :=
  hax_core.primitive.primitive_definitions.Build_t__i128_i128 (core.ops.arith.Add__f_add (hax_core.primitive.primitive_definitions.0 a) (hax_core.primitive.primitive_definitions.0 b)).

Definition wrapping_sub_i128 (a : hax_core.primitive.primitive_definitions.t_i128) (b : hax_core.primitive.primitive_definitions.t_i128) : hax_core.primitive.primitive_definitions.t_i128 :=
  hax_core.primitive.primitive_definitions.Build_t__i128_i128 (core.ops.arith.Sub__f_sub (hax_core.primitive.primitive_definitions.0 a) (hax_core.primitive.primitive_definitions.0 b)).

Definition wrapping_mul_i128 (a : hax_core.primitive.primitive_definitions.t_i128) (b : hax_core.primitive.primitive_definitions.t_i128) : hax_core.primitive.primitive_definitions.t_i128 :=
  hax_core.primitive.primitive_definitions.Build_t__i128_i128 (core.ops.arith.Mul__f_mul (hax_core.primitive.primitive_definitions.0 a) (hax_core.primitive.primitive_definitions.0 b)).

Definition add_with_overflow_i128 (x : hax_core.primitive.primitive_definitions.t_i128) (y : hax_core.primitive.primitive_definitions.t_i128) : (hax_core.primitive.primitive_definitions.t_i128*bool) :=
  let overflow := hax_core.base.z.z_add (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 x)) (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 y)) in
  let res : hax_core.base_interface.int.t_I128 := hax_core.base_interface.coerce.Concretization__f_concretize (core.clone.Clone__f_clone (overflow)) in
  (hax_core.primitive.primitive_definitions.Build_t__i128_i128 (core.clone.Clone__f_clone (res)),hax_core.base.z.z_lt (hax_core.base_interface.coerce.Abstraction__f_lift (res)) (overflow)).

Definition unchecked_div_i128 (x : hax_core.primitive.primitive_definitions.t_i128) (y : hax_core.primitive.primitive_definitions.t_i128) : hax_core.primitive.primitive_definitions.t_i128 :=
  hax_core.primitive.primitive_definitions.Build_t__i128_i128 (hax_core.base_interface.int.I128_I128 (hax_core.base.z.z_div (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 x)) (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 y)))).

Definition unchecked_add_i128 (x : hax_core.primitive.primitive_definitions.t_i128) (y : hax_core.primitive.primitive_definitions.t_i128) : hax_core.primitive.primitive_definitions.t_i128 :=
  hax_core.primitive.primitive_definitions.Build_t__i128_i128 (hax_core.base_interface.int.I128_I128 (hax_core.base.z.z_add (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 x)) (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 y)))).

Definition wrapping_add_isize (a : hax_core.primitive.primitive_definitions.t_isize) (b : hax_core.primitive.primitive_definitions.t_isize) : hax_core.primitive.primitive_definitions.t_isize :=
  hax_core.primitive.primitive_definitions.Build_t__isize_isize (core.ops.arith.Add__f_add (hax_core.primitive.primitive_definitions.0 a) (hax_core.primitive.primitive_definitions.0 b)).

Definition wrapping_sub_isize (a : hax_core.primitive.primitive_definitions.t_isize) (b : hax_core.primitive.primitive_definitions.t_isize) : hax_core.primitive.primitive_definitions.t_isize :=
  hax_core.primitive.primitive_definitions.Build_t__isize_isize (core.ops.arith.Sub__f_sub (hax_core.primitive.primitive_definitions.0 a) (hax_core.primitive.primitive_definitions.0 b)).

Definition wrapping_mul_isize (a : hax_core.primitive.primitive_definitions.t_isize) (b : hax_core.primitive.primitive_definitions.t_isize) : hax_core.primitive.primitive_definitions.t_isize :=
  hax_core.primitive.primitive_definitions.Build_t__isize_isize (core.ops.arith.Mul__f_mul (hax_core.primitive.primitive_definitions.0 a) (hax_core.primitive.primitive_definitions.0 b)).

Definition add_with_overflow_isize (x : hax_core.primitive.primitive_definitions.t_isize) (y : hax_core.primitive.primitive_definitions.t_isize) : (hax_core.primitive.primitive_definitions.t_isize*bool) :=
  let overflow := hax_core.base.z.z_add (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 x)) (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 y)) in
  let res : hax_core.base_interface.int.t_I64 := hax_core.base_interface.coerce.Concretization__f_concretize (core.clone.Clone__f_clone (overflow)) in
  (hax_core.primitive.primitive_definitions.Build_t__isize_isize (core.clone.Clone__f_clone (res)),hax_core.base.z.z_lt (hax_core.base_interface.coerce.Abstraction__f_lift (res)) (overflow)).

Definition unchecked_div_isize (x : hax_core.primitive.primitive_definitions.t_isize) (y : hax_core.primitive.primitive_definitions.t_isize) : hax_core.primitive.primitive_definitions.t_isize :=
  hax_core.primitive.primitive_definitions.Build_t__isize_isize (hax_core.base_interface.int.I64_I64 (hax_core.base.z.z_div (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 x)) (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 y)))).

Definition unchecked_add_isize (x : hax_core.primitive.primitive_definitions.t_isize) (y : hax_core.primitive.primitive_definitions.t_isize) : hax_core.primitive.primitive_definitions.t_isize :=
  hax_core.primitive.primitive_definitions.Build_t__isize_isize (hax_core.base_interface.int.I64_I64 (hax_core.base.z.z_add (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 x)) (hax_core.base_interface.coerce.Abstraction__f_lift (hax_core.primitive.primitive_definitions.0 y)))).

Definition impl__MIN : hax_core.primitive.primitive_definitions.t_i8 :=
  hax_core.primitive.primitive_definitions.Build_t__i8_i8 (hax_core.base_interface.int.Constants__f_MIN).

Definition impl__MAX : hax_core.primitive.primitive_definitions.t_i8 :=
  hax_core.primitive.primitive_definitions.Build_t__i8_i8 (hax_core.base_interface.int.Constants__f_MAX).

Definition impl__BITS : hax_core.primitive.primitive_definitions.t_u32 :=
  hax_core.primitive.primitive_definitions.Build_t__u32_u32 (hax_core.base_interface.int.impl_149__BITS).

Definition impl__wrapping_add (self : hax_core.primitive.primitive_definitions.t_i8) (rhs : hax_core.primitive.primitive_definitions.t_i8) : hax_core.primitive.primitive_definitions.t_i8 :=
  wrapping_add_i8 (self) (rhs).

Definition impl__wrapping_sub (self : hax_core.primitive.primitive_definitions.t_i8) (rhs : hax_core.primitive.primitive_definitions.t_i8) : hax_core.primitive.primitive_definitions.t_i8 :=
  wrapping_sub_i8 (self) (rhs).

Definition impl__wrapping_neg (self : hax_core.primitive.primitive_definitions.t_i8) : hax_core.primitive.primitive_definitions.t_i8 :=
  impl__wrapping_sub (core.convert.Into__f_into ((0 : t_i8))) (self).

Definition impl__signum (self : hax_core.primitive.primitive_definitions.t_i8) : hax_core.primitive.primitive_definitions.t_i8 :=
  if
    core.cmp.PartialOrd__f_lt (core.clone.Clone__f_clone (self)) (core.convert.Into__f_into ((0 : t_i8)))
  then
    core.convert.Into__f_into ((-1 : t_i8))
  else
    if
      core.cmp.PartialEq__f_eq (self) (core.convert.Into__f_into ((0 : t_i8)))
    then
      core.convert.Into__f_into ((0 : t_i8))
    else
      core.convert.Into__f_into ((1 : t_i8)).

Definition impl__is_positive (self : hax_core.primitive.primitive_definitions.t_i8) : bool :=
  core.cmp.PartialOrd__f_gt (self) (core.convert.Into__f_into ((0 : t_i8))).

Definition impl__is_negative (self : hax_core.primitive.primitive_definitions.t_i8) : bool :=
  core.cmp.PartialOrd__f_lt (self) (core.convert.Into__f_into ((0 : t_i8))).

Definition impl__wrapping_abs (self : hax_core.primitive.primitive_definitions.t_i8) : hax_core.primitive.primitive_definitions.t_i8 :=
  if
    impl__is_negative (core.clone.Clone__f_clone (self))
  then
    impl__wrapping_neg (self)
  else
    self.

Definition impl__rem_euclid (self : hax_core.primitive.primitive_definitions.t_i8) (rhs : hax_core.primitive.primitive_definitions.t_i8) : hax_core.primitive.primitive_definitions.t_i8 :=
  let r := core.ops.arith.Rem__f_rem (self) (core.clone.Clone__f_clone (rhs)) in
  if
    core.cmp.PartialOrd__f_lt (r) (core.convert.Into__f_into ((0 : t_i8)))
  then
    impl__wrapping_add (r) (impl__wrapping_abs (rhs))
  else
    r.

Definition impl__abs (self : hax_core.primitive.primitive_definitions.t_i8) : hax_core.primitive.primitive_definitions.t_i8 :=
  if
    impl__is_negative (core.clone.Clone__f_clone (self))
  then
    core.ops.arith.Neg__f_neg (self)
  else
    self.

Definition impl_1__MIN : hax_core.primitive.primitive_definitions.t_i16 :=
  hax_core.primitive.primitive_definitions.Build_t__i16_i16 (hax_core.base_interface.int.Constants__f_MIN).

Definition impl_1__MAX : hax_core.primitive.primitive_definitions.t_i16 :=
  hax_core.primitive.primitive_definitions.Build_t__i16_i16 (hax_core.base_interface.int.Constants__f_MAX).

Definition impl_1__BITS : hax_core.primitive.primitive_definitions.t_u32 :=
  hax_core.primitive.primitive_definitions.Build_t__u32_u32 (hax_core.base_interface.int.impl_122__BITS).

Definition impl_1__wrapping_add (self : hax_core.primitive.primitive_definitions.t_i16) (rhs : hax_core.primitive.primitive_definitions.t_i16) : hax_core.primitive.primitive_definitions.t_i16 :=
  wrapping_add_i16 (self) (rhs).

Definition impl_1__wrapping_sub (self : hax_core.primitive.primitive_definitions.t_i16) (rhs : hax_core.primitive.primitive_definitions.t_i16) : hax_core.primitive.primitive_definitions.t_i16 :=
  wrapping_sub_i16 (self) (rhs).

Definition impl_1__wrapping_neg (self : hax_core.primitive.primitive_definitions.t_i16) : hax_core.primitive.primitive_definitions.t_i16 :=
  impl_1__wrapping_sub (core.convert.Into__f_into ((0 : t_i16))) (self).

Definition impl_1__signum (self : hax_core.primitive.primitive_definitions.t_i16) : hax_core.primitive.primitive_definitions.t_i16 :=
  if
    core.cmp.PartialOrd__f_lt (core.clone.Clone__f_clone (self)) (core.convert.Into__f_into ((0 : t_i16)))
  then
    core.convert.Into__f_into ((-1 : t_i16))
  else
    if
      core.cmp.PartialEq__f_eq (self) (core.convert.Into__f_into ((0 : t_i16)))
    then
      core.convert.Into__f_into ((0 : t_i16))
    else
      core.convert.Into__f_into ((1 : t_i16)).

Definition impl_1__is_positive (self : hax_core.primitive.primitive_definitions.t_i16) : bool :=
  core.cmp.PartialOrd__f_gt (self) (core.convert.Into__f_into ((0 : t_i16))).

Definition impl_1__is_negative (self : hax_core.primitive.primitive_definitions.t_i16) : bool :=
  core.cmp.PartialOrd__f_lt (self) (core.convert.Into__f_into ((0 : t_i16))).

Definition impl_1__wrapping_abs (self : hax_core.primitive.primitive_definitions.t_i16) : hax_core.primitive.primitive_definitions.t_i16 :=
  if
    impl_1__is_negative (core.clone.Clone__f_clone (self))
  then
    impl_1__wrapping_neg (self)
  else
    self.

Definition impl_1__rem_euclid (self : hax_core.primitive.primitive_definitions.t_i16) (rhs : hax_core.primitive.primitive_definitions.t_i16) : hax_core.primitive.primitive_definitions.t_i16 :=
  let r := core.ops.arith.Rem__f_rem (self) (core.clone.Clone__f_clone (rhs)) in
  if
    core.cmp.PartialOrd__f_lt (r) (core.convert.Into__f_into ((0 : t_i16)))
  then
    impl_1__wrapping_add (r) (impl_1__wrapping_abs (rhs))
  else
    r.

Definition impl_1__abs (self : hax_core.primitive.primitive_definitions.t_i16) : hax_core.primitive.primitive_definitions.t_i16 :=
  if
    impl_1__is_negative (core.clone.Clone__f_clone (self))
  then
    core.ops.arith.Neg__f_neg (self)
  else
    self.

Definition impl_2__MIN : hax_core.primitive.primitive_definitions.t_i32 :=
  hax_core.primitive.primitive_definitions.Build_t__i32_i32 (hax_core.base_interface.int.Constants__f_MIN).

Definition impl_2__MAX : hax_core.primitive.primitive_definitions.t_i32 :=
  hax_core.primitive.primitive_definitions.Build_t__i32_i32 (hax_core.base_interface.int.Constants__f_MAX).

Definition impl_2__BITS : hax_core.primitive.primitive_definitions.t_u32 :=
  hax_core.primitive.primitive_definitions.Build_t__u32_u32 (hax_core.base_interface.int.impl_95__BITS).

Definition impl_2__wrapping_add (self : hax_core.primitive.primitive_definitions.t_i32) (rhs : hax_core.primitive.primitive_definitions.t_i32) : hax_core.primitive.primitive_definitions.t_i32 :=
  wrapping_add_i32 (self) (rhs).

Definition impl_2__wrapping_sub (self : hax_core.primitive.primitive_definitions.t_i32) (rhs : hax_core.primitive.primitive_definitions.t_i32) : hax_core.primitive.primitive_definitions.t_i32 :=
  wrapping_sub_i32 (self) (rhs).

Definition impl_2__wrapping_neg (self : hax_core.primitive.primitive_definitions.t_i32) : hax_core.primitive.primitive_definitions.t_i32 :=
  impl_2__wrapping_sub (core.convert.Into__f_into ((0 : t_i32))) (self).

Definition impl_2__signum (self : hax_core.primitive.primitive_definitions.t_i32) : hax_core.primitive.primitive_definitions.t_i32 :=
  if
    core.cmp.PartialOrd__f_lt (core.clone.Clone__f_clone (self)) (core.convert.Into__f_into ((0 : t_i32)))
  then
    core.convert.Into__f_into ((-1 : t_i32))
  else
    if
      core.cmp.PartialEq__f_eq (self) (core.convert.Into__f_into ((0 : t_i32)))
    then
      core.convert.Into__f_into ((0 : t_i32))
    else
      core.convert.Into__f_into ((1 : t_i32)).

Definition impl_2__is_positive (self : hax_core.primitive.primitive_definitions.t_i32) : bool :=
  core.cmp.PartialOrd__f_gt (self) (core.convert.Into__f_into ((0 : t_i32))).

Definition impl_2__is_negative (self : hax_core.primitive.primitive_definitions.t_i32) : bool :=
  core.cmp.PartialOrd__f_lt (self) (core.convert.Into__f_into ((0 : t_i32))).

Definition impl_2__wrapping_abs (self : hax_core.primitive.primitive_definitions.t_i32) : hax_core.primitive.primitive_definitions.t_i32 :=
  if
    impl_2__is_negative (core.clone.Clone__f_clone (self))
  then
    impl_2__wrapping_neg (self)
  else
    self.

Definition impl_2__rem_euclid (self : hax_core.primitive.primitive_definitions.t_i32) (rhs : hax_core.primitive.primitive_definitions.t_i32) : hax_core.primitive.primitive_definitions.t_i32 :=
  let r := core.ops.arith.Rem__f_rem (self) (core.clone.Clone__f_clone (rhs)) in
  if
    core.cmp.PartialOrd__f_lt (r) (core.convert.Into__f_into ((0 : t_i32)))
  then
    impl_2__wrapping_add (r) (impl_2__wrapping_abs (rhs))
  else
    r.

Definition impl_2__abs (self : hax_core.primitive.primitive_definitions.t_i32) : hax_core.primitive.primitive_definitions.t_i32 :=
  if
    impl_2__is_negative (core.clone.Clone__f_clone (self))
  then
    core.ops.arith.Neg__f_neg (self)
  else
    self.

Definition impl_3__MIN : hax_core.primitive.primitive_definitions.t_i64 :=
  hax_core.primitive.primitive_definitions.Build_t__i64_i64 (hax_core.base_interface.int.Constants__f_MIN).

Definition impl_3__MAX : hax_core.primitive.primitive_definitions.t_i64 :=
  hax_core.primitive.primitive_definitions.Build_t__i64_i64 (hax_core.base_interface.int.Constants__f_MAX).

Definition impl_3__BITS : hax_core.primitive.primitive_definitions.t_u32 :=
  hax_core.primitive.primitive_definitions.Build_t__u32_u32 (hax_core.base_interface.int.impl_68__BITS).

Definition impl_3__wrapping_add (self : hax_core.primitive.primitive_definitions.t_i64) (rhs : hax_core.primitive.primitive_definitions.t_i64) : hax_core.primitive.primitive_definitions.t_i64 :=
  wrapping_add_i64 (self) (rhs).

Definition impl_3__wrapping_sub (self : hax_core.primitive.primitive_definitions.t_i64) (rhs : hax_core.primitive.primitive_definitions.t_i64) : hax_core.primitive.primitive_definitions.t_i64 :=
  wrapping_sub_i64 (self) (rhs).

Definition impl_3__wrapping_neg (self : hax_core.primitive.primitive_definitions.t_i64) : hax_core.primitive.primitive_definitions.t_i64 :=
  impl_3__wrapping_sub (core.convert.Into__f_into ((0 : t_i64))) (self).

Definition impl_3__signum (self : hax_core.primitive.primitive_definitions.t_i64) : hax_core.primitive.primitive_definitions.t_i64 :=
  if
    core.cmp.PartialOrd__f_lt (core.clone.Clone__f_clone (self)) (core.convert.Into__f_into ((0 : t_i64)))
  then
    core.convert.Into__f_into ((-1 : t_i64))
  else
    if
      core.cmp.PartialEq__f_eq (self) (core.convert.Into__f_into ((0 : t_i64)))
    then
      core.convert.Into__f_into ((0 : t_i64))
    else
      core.convert.Into__f_into ((1 : t_i64)).

Definition impl_3__is_positive (self : hax_core.primitive.primitive_definitions.t_i64) : bool :=
  core.cmp.PartialOrd__f_gt (self) (core.convert.Into__f_into ((0 : t_i64))).

Definition impl_3__is_negative (self : hax_core.primitive.primitive_definitions.t_i64) : bool :=
  core.cmp.PartialOrd__f_lt (self) (core.convert.Into__f_into ((0 : t_i64))).

Definition impl_3__wrapping_abs (self : hax_core.primitive.primitive_definitions.t_i64) : hax_core.primitive.primitive_definitions.t_i64 :=
  if
    impl_3__is_negative (core.clone.Clone__f_clone (self))
  then
    impl_3__wrapping_neg (self)
  else
    self.

Definition impl_3__rem_euclid (self : hax_core.primitive.primitive_definitions.t_i64) (rhs : hax_core.primitive.primitive_definitions.t_i64) : hax_core.primitive.primitive_definitions.t_i64 :=
  let r := core.ops.arith.Rem__f_rem (self) (core.clone.Clone__f_clone (rhs)) in
  if
    core.cmp.PartialOrd__f_lt (r) (core.convert.Into__f_into ((0 : t_i64)))
  then
    impl_3__wrapping_add (r) (impl_3__wrapping_abs (rhs))
  else
    r.

Definition impl_3__abs (self : hax_core.primitive.primitive_definitions.t_i64) : hax_core.primitive.primitive_definitions.t_i64 :=
  if
    impl_3__is_negative (core.clone.Clone__f_clone (self))
  then
    core.ops.arith.Neg__f_neg (self)
  else
    self.

Definition impl_4__MIN : hax_core.primitive.primitive_definitions.t_i128 :=
  hax_core.primitive.primitive_definitions.Build_t__i128_i128 (hax_core.base_interface.int.Constants__f_MIN).

Definition impl_4__MAX : hax_core.primitive.primitive_definitions.t_i128 :=
  hax_core.primitive.primitive_definitions.Build_t__i128_i128 (hax_core.base_interface.int.Constants__f_MAX).

Definition impl_4__BITS : hax_core.primitive.primitive_definitions.t_u32 :=
  hax_core.primitive.primitive_definitions.Build_t__u32_u32 (hax_core.base_interface.int.impl_41__BITS).

Definition impl_4__wrapping_add (self : hax_core.primitive.primitive_definitions.t_i128) (rhs : hax_core.primitive.primitive_definitions.t_i128) : hax_core.primitive.primitive_definitions.t_i128 :=
  wrapping_add_i128 (self) (rhs).

Definition impl_4__wrapping_sub (self : hax_core.primitive.primitive_definitions.t_i128) (rhs : hax_core.primitive.primitive_definitions.t_i128) : hax_core.primitive.primitive_definitions.t_i128 :=
  wrapping_sub_i128 (self) (rhs).

Definition impl_4__wrapping_neg (self : hax_core.primitive.primitive_definitions.t_i128) : hax_core.primitive.primitive_definitions.t_i128 :=
  impl_4__wrapping_sub (core.convert.Into__f_into ((0 : t_i128))) (self).

Definition impl_4__signum (self : hax_core.primitive.primitive_definitions.t_i128) : hax_core.primitive.primitive_definitions.t_i128 :=
  if
    core.cmp.PartialOrd__f_lt (core.clone.Clone__f_clone (self)) (core.convert.Into__f_into ((0 : t_i128)))
  then
    core.convert.Into__f_into ((-1 : t_i128))
  else
    if
      core.cmp.PartialEq__f_eq (self) (core.convert.Into__f_into ((0 : t_i128)))
    then
      core.convert.Into__f_into ((0 : t_i128))
    else
      core.convert.Into__f_into ((1 : t_i128)).

Definition impl_4__is_positive (self : hax_core.primitive.primitive_definitions.t_i128) : bool :=
  core.cmp.PartialOrd__f_gt (self) (core.convert.Into__f_into ((0 : t_i128))).

Definition impl_4__is_negative (self : hax_core.primitive.primitive_definitions.t_i128) : bool :=
  core.cmp.PartialOrd__f_lt (self) (core.convert.Into__f_into ((0 : t_i128))).

Definition impl_4__wrapping_abs (self : hax_core.primitive.primitive_definitions.t_i128) : hax_core.primitive.primitive_definitions.t_i128 :=
  if
    impl_4__is_negative (core.clone.Clone__f_clone (self))
  then
    impl_4__wrapping_neg (self)
  else
    self.

Definition impl_4__rem_euclid (self : hax_core.primitive.primitive_definitions.t_i128) (rhs : hax_core.primitive.primitive_definitions.t_i128) : hax_core.primitive.primitive_definitions.t_i128 :=
  let r := core.ops.arith.Rem__f_rem (self) (core.clone.Clone__f_clone (rhs)) in
  if
    core.cmp.PartialOrd__f_lt (r) (core.convert.Into__f_into ((0 : t_i128)))
  then
    impl_4__wrapping_add (r) (impl_4__wrapping_abs (rhs))
  else
    r.

Definition impl_4__abs (self : hax_core.primitive.primitive_definitions.t_i128) : hax_core.primitive.primitive_definitions.t_i128 :=
  if
    impl_4__is_negative (core.clone.Clone__f_clone (self))
  then
    core.ops.arith.Neg__f_neg (self)
  else
    self.

Definition impl_5__MIN : hax_core.primitive.primitive_definitions.t_isize :=
  hax_core.primitive.primitive_definitions.Build_t__isize_isize (hax_core.base_interface.int.Constants__f_MIN).

Definition impl_5__MAX : hax_core.primitive.primitive_definitions.t_isize :=
  hax_core.primitive.primitive_definitions.Build_t__isize_isize (hax_core.base_interface.int.Constants__f_MAX).

Definition impl_5__BITS : hax_core.primitive.primitive_definitions.t_u32 :=
  hax_core.primitive.primitive_definitions.Build_t__u32_u32 (hax_core.base_interface.int.impl_68__BITS).

Definition impl_5__wrapping_add (self : hax_core.primitive.primitive_definitions.t_isize) (rhs : hax_core.primitive.primitive_definitions.t_isize) : hax_core.primitive.primitive_definitions.t_isize :=
  wrapping_add_isize (self) (rhs).

Definition impl_5__wrapping_sub (self : hax_core.primitive.primitive_definitions.t_isize) (rhs : hax_core.primitive.primitive_definitions.t_isize) : hax_core.primitive.primitive_definitions.t_isize :=
  wrapping_sub_isize (self) (rhs).

Definition impl_5__wrapping_neg (self : hax_core.primitive.primitive_definitions.t_isize) : hax_core.primitive.primitive_definitions.t_isize :=
  impl_5__wrapping_sub (core.convert.Into__f_into ((0 : t_isize))) (self).

Definition impl_5__signum (self : hax_core.primitive.primitive_definitions.t_isize) : hax_core.primitive.primitive_definitions.t_isize :=
  if
    core.cmp.PartialOrd__f_lt (core.clone.Clone__f_clone (self)) (core.convert.Into__f_into ((0 : t_isize)))
  then
    core.convert.Into__f_into ((-1 : t_isize))
  else
    if
      core.cmp.PartialEq__f_eq (self) (core.convert.Into__f_into ((0 : t_isize)))
    then
      core.convert.Into__f_into ((0 : t_isize))
    else
      core.convert.Into__f_into ((1 : t_isize)).

Definition impl_5__is_positive (self : hax_core.primitive.primitive_definitions.t_isize) : bool :=
  core.cmp.PartialOrd__f_gt (self) (core.convert.Into__f_into ((0 : t_isize))).

Definition impl_5__is_negative (self : hax_core.primitive.primitive_definitions.t_isize) : bool :=
  core.cmp.PartialOrd__f_lt (self) (core.convert.Into__f_into ((0 : t_isize))).

Definition impl_5__wrapping_abs (self : hax_core.primitive.primitive_definitions.t_isize) : hax_core.primitive.primitive_definitions.t_isize :=
  if
    impl_5__is_negative (core.clone.Clone__f_clone (self))
  then
    impl_5__wrapping_neg (self)
  else
    self.

Definition impl_5__rem_euclid (self : hax_core.primitive.primitive_definitions.t_isize) (rhs : hax_core.primitive.primitive_definitions.t_isize) : hax_core.primitive.primitive_definitions.t_isize :=
  let r := core.ops.arith.Rem__f_rem (self) (core.clone.Clone__f_clone (rhs)) in
  if
    core.cmp.PartialOrd__f_lt (r) (core.convert.Into__f_into ((0 : t_isize)))
  then
    impl_5__wrapping_add (r) (impl_5__wrapping_abs (rhs))
  else
    r.

Definition impl_5__abs (self : hax_core.primitive.primitive_definitions.t_isize) : hax_core.primitive.primitive_definitions.t_isize :=
  if
    impl_5__is_negative (core.clone.Clone__f_clone (self))
  then
    core.ops.arith.Neg__f_neg (self)
  else
    self.

Definition impl_6__MIN : hax_core.primitive.primitive_definitions.t_u8 :=
  hax_core.primitive.primitive_definitions.Build_t__u8_u8 (hax_core.base_interface.int.Constants__f_MIN).

Definition impl_6__MAX : hax_core.primitive.primitive_definitions.t_u8 :=
  hax_core.primitive.primitive_definitions.Build_t__u8_u8 (hax_core.base_interface.int.Constants__f_MAX).

Definition impl_6__BITS : hax_core.primitive.primitive_definitions.t_u32 :=
  hax_core.primitive.primitive_definitions.Build_t__u32_u32 (hax_core.base_interface.int.impl_284__BITS).

Definition ctpop_u8 (x : hax_core.primitive.primitive_definitions.t_u8) : hax_core.primitive.primitive_definitions.t_u32 :=
  let count : hax_core.primitive.primitive_definitions.t_u32 := core.convert.Into__f_into ((0 : t_u32)) in
  let count := rust_primitives.hax.folds.fold_range ((0 : t_u32)) (core.convert.Into__f_into (impl_6__BITS)) (fun count _ =>
    (true : bool)) (count) (fun count i =>
    core.ops.arith.Add__f_add (count) (core.convert.Into__f_into (core.ops.bit.BitAnd__f_bitand (core.ops.bit.Shr__f_shr (core.clone.Clone__f_clone (x)) (core.convert.Into__f_into (i))) (core.convert.Into__f_into ((1 : t_u8)))))) in
  count.

Definition cttz_u8 (x : hax_core.primitive.primitive_definitions.t_u8) : hax_core.primitive.primitive_definitions.t_u32 :=
  let count : hax_core.primitive.primitive_definitions.t_u32 := core.convert.Into__f_into ((0 : t_u32)) in
  let done := (false : bool) in
  let (count,done) := rust_primitives.hax.folds.fold_range ((0 : t_u32)) (core.convert.Into__f_into (impl_6__BITS)) (fun (count,done) _ =>
    (true : bool)) ((count,done)) (fun (count,done) i =>
    let low_bit : hax_core.primitive.primitive_definitions.t_u32 := core.convert.Into__f_into (core.ops.bit.BitAnd__f_bitand (core.ops.bit.Shr__f_shr (core.clone.Clone__f_clone (x)) (core.convert.Into__f_into (i))) (core.convert.Into__f_into ((1 : t_u8)))) in
    if
      orb (core.cmp.PartialEq__f_eq (low_bit) (core.convert.Into__f_into ((1 : t_u32)))) (done)
    then
      let done := (true : bool) in
      (count,done)
    else
      let count := core.ops.arith.Add__f_add (count) (core.convert.Into__f_into ((1 : t_u32))) in
      (count,done)) in
  count.

Definition ctlz_u8 (x : hax_core.primitive.primitive_definitions.t_u8) : hax_core.primitive.primitive_definitions.t_u32 :=
  let count : hax_core.primitive.primitive_definitions.t_u32 := core.convert.Into__f_into ((0 : t_u32)) in
  let done := (false : bool) in
  let (count,done) := rust_primitives.hax.folds.fold_range ((0 : t_u32)) (core.convert.Into__f_into (impl_6__BITS)) (fun (count,done) _ =>
    (true : bool)) ((count,done)) (fun (count,done) i =>
    let high_bit : hax_core.primitive.primitive_definitions.t_u32 := core.convert.Into__f_into (core.ops.bit.Shr__f_shr (core.ops.bit.Shl__f_shl (core.clone.Clone__f_clone (x)) (core.convert.Into__f_into (i))) (core.convert.Into__f_into (core.ops.arith.Sub__f_sub (impl_6__BITS) (core.convert.Into__f_into ((1 : t_u32)))))) in
    if
      orb (core.cmp.PartialEq__f_eq (high_bit) (core.convert.Into__f_into ((1 : t_u32)))) (done)
    then
      let done := (true : bool) in
      (count,done)
    else
      let count := core.ops.arith.Add__f_add (count) (core.convert.Into__f_into ((1 : t_u32))) in
      (count,done)) in
  count.

Definition rotate_left_u8 (x : hax_core.primitive.primitive_definitions.t_u8) (shift : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u8 :=
  let shift : hax_core.primitive.primitive_definitions.t_u32 := core.ops.arith.Rem__f_rem (shift) (impl_6__BITS) in
  let left : hax_core.primitive.primitive_definitions.t_u8 := core.ops.bit.Shl__f_shl (core.clone.Clone__f_clone (x)) (core.clone.Clone__f_clone (shift)) in
  let right : hax_core.primitive.primitive_definitions.t_u8 := core.ops.bit.Shr__f_shr (core.clone.Clone__f_clone (x)) (core.ops.arith.Sub__f_sub (impl_6__BITS) (core.clone.Clone__f_clone (shift))) in
  core.ops.bit.BitOr__f_bitor (left) (right).

Definition rotate_right_u8 (x : hax_core.primitive.primitive_definitions.t_u8) (shift : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u8 :=
  let shift : hax_core.primitive.primitive_definitions.t_u32 := core.ops.arith.Rem__f_rem (shift) (impl_6__BITS) in
  let left : hax_core.primitive.primitive_definitions.t_u8 := core.ops.bit.Shr__f_shr (core.clone.Clone__f_clone (x)) (core.clone.Clone__f_clone (shift)) in
  let right : hax_core.primitive.primitive_definitions.t_u8 := core.ops.bit.Shl__f_shl (core.clone.Clone__f_clone (x)) (core.ops.arith.Sub__f_sub (impl_6__BITS) (core.clone.Clone__f_clone (shift))) in
  core.ops.bit.BitOr__f_bitor (left) (right).

Definition bswap_u8 (x : hax_core.primitive.primitive_definitions.t_u8) : hax_core.primitive.primitive_definitions.t_u8 :=
  let count : hax_core.primitive.primitive_definitions.t_u8 := core.convert.Into__f_into ((0 : t_u8)) in
  let count := rust_primitives.hax.folds.fold_range ((0 : t_u32)) (core.convert.Into__f_into (impl_6__BITS)) (fun count _ =>
    (true : bool)) (count) (fun count i =>
    let low_bit : hax_core.primitive.primitive_definitions.t_u8 := core.convert.Into__f_into (core.ops.bit.BitAnd__f_bitand (core.ops.bit.Shr__f_shr (core.clone.Clone__f_clone (x)) (core.convert.Into__f_into (i))) (core.convert.Into__f_into ((1 : t_u8)))) in
    let count := core.ops.arith.Add__f_add (core.ops.bit.Shl__f_shl (count) (core.convert.Into__f_into ((1 : t_u32)))) (low_bit) in
    count) in
  count.

Definition impl_6__count_ones (self : hax_core.primitive.primitive_definitions.t_u8) : hax_core.primitive.primitive_definitions.t_u32 :=
  rust_primitives.hax.control_flow_monad.mexception.run (let hoist1 := core.ops.control_flow.ControlFlow_Break (ctpop_u8 (self)) in
  core.ops.control_flow.ControlFlow_Continue (rust_primitives.hax.never_to_any (hoist1))).

Definition impl_6__count_zeros (self : hax_core.primitive.primitive_definitions.t_u8) : hax_core.primitive.primitive_definitions.t_u32 :=
  impl_6__count_ones (core.ops.bit.Not__f_not (self)).

Definition impl_6__leading_zeros (self : hax_core.primitive.primitive_definitions.t_u8) : hax_core.primitive.primitive_definitions.t_u32 :=
  rust_primitives.hax.control_flow_monad.mexception.run (let hoist2 := core.ops.control_flow.ControlFlow_Break (ctlz_u8 (self)) in
  core.ops.control_flow.ControlFlow_Continue (rust_primitives.hax.never_to_any (hoist2))).

Definition impl_6__trailing_zeros (self : hax_core.primitive.primitive_definitions.t_u8) : hax_core.primitive.primitive_definitions.t_u32 :=
  rust_primitives.hax.control_flow_monad.mexception.run (let hoist3 := core.ops.control_flow.ControlFlow_Break (cttz_u8 (self)) in
  core.ops.control_flow.ControlFlow_Continue (rust_primitives.hax.never_to_any (hoist3))).

Definition impl_6__leading_ones (self : hax_core.primitive.primitive_definitions.t_u8) : hax_core.primitive.primitive_definitions.t_u32 :=
  impl_6__leading_zeros (core.ops.bit.Not__f_not (self)).

Definition impl_6__trailing_ones (self : hax_core.primitive.primitive_definitions.t_u8) : hax_core.primitive.primitive_definitions.t_u32 :=
  impl_6__trailing_zeros (core.ops.bit.Not__f_not (self)).

Definition impl_6__rotate_left (self : hax_core.primitive.primitive_definitions.t_u8) (n : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u8 :=
  rust_primitives.hax.control_flow_monad.mexception.run (let hoist4 := core.ops.control_flow.ControlFlow_Break (rotate_left_u8 (self) (n)) in
  core.ops.control_flow.ControlFlow_Continue (rust_primitives.hax.never_to_any (hoist4))).

Definition impl_6__rotate_right (self : hax_core.primitive.primitive_definitions.t_u8) (n : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u8 :=
  rust_primitives.hax.control_flow_monad.mexception.run (let hoist5 := core.ops.control_flow.ControlFlow_Break (rotate_right_u8 (self) (n)) in
  core.ops.control_flow.ControlFlow_Continue (rust_primitives.hax.never_to_any (hoist5))).

Definition impl_6__swap_bytes (self : hax_core.primitive.primitive_definitions.t_u8) : hax_core.primitive.primitive_definitions.t_u8 :=
  core.convert.Into__f_into (bswap_u8 (self)).

Definition impl_6__from_be (x : hax_core.primitive.primitive_definitions.t_u8) : hax_core.primitive.primitive_definitions.t_u8 :=
  impl_6__swap_bytes (x).

Definition impl_6__from_le (x : hax_core.primitive.primitive_definitions.t_u8) : hax_core.primitive.primitive_definitions.t_u8 :=
  x.

Definition impl_6__to_be (self : hax_core.primitive.primitive_definitions.t_u8) : hax_core.primitive.primitive_definitions.t_u8 :=
  impl_6__swap_bytes (self).

Definition impl_6__to_le (self : hax_core.primitive.primitive_definitions.t_u8) : hax_core.primitive.primitive_definitions.t_u8 :=
  self.

Definition impl_6__checked_add (self : hax_core.primitive.primitive_definitions.t_u8) (rhs : hax_core.primitive.primitive_definitions.t_u8) : core.option.t_Option ((hax_core.primitive.primitive_definitions.t_u8)) :=
  core.option.Option_Some (unchecked_add_u8 (self) (rhs)).

Definition impl_6__checked_div (self : hax_core.primitive.primitive_definitions.t_u8) (rhs : hax_core.primitive.primitive_definitions.t_u8) : core.option.t_Option ((hax_core.primitive.primitive_definitions.t_u8)) :=
  if
    core.cmp.PartialEq__f_eq (rhs) (core.convert.Into__f_into ((0 : t_u8)))
  then
    core.option.Option_None
  else
    core.option.Option_Some (unchecked_div_u8 (self) (rhs)).

Definition impl_6__wrapping_add (self : hax_core.primitive.primitive_definitions.t_u8) (rhs : hax_core.primitive.primitive_definitions.t_u8) : hax_core.primitive.primitive_definitions.t_u8 :=
  wrapping_add_u8 (self) (rhs).

Definition impl_6__wrapping_sub (self : hax_core.primitive.primitive_definitions.t_u8) (rhs : hax_core.primitive.primitive_definitions.t_u8) : hax_core.primitive.primitive_definitions.t_u8 :=
  wrapping_sub_u8 (self) (rhs).

Definition impl_6__wrapping_mul (self : hax_core.primitive.primitive_definitions.t_u8) (rhs : hax_core.primitive.primitive_definitions.t_u8) : hax_core.primitive.primitive_definitions.t_u8 :=
  wrapping_mul_u8 (self) (rhs).

Definition impl_6__wrapping_div (self : hax_core.primitive.primitive_definitions.t_u8) (rhs : hax_core.primitive.primitive_definitions.t_u8) : hax_core.primitive.primitive_definitions.t_u8 :=
  core.ops.arith.Div__f_div (self) (rhs).

Definition impl_6__wrapping_div_euclid (self : hax_core.primitive.primitive_definitions.t_u8) (rhs : hax_core.primitive.primitive_definitions.t_u8) : hax_core.primitive.primitive_definitions.t_u8 :=
  core.ops.arith.Div__f_div (self) (rhs).

Definition impl_6__wrapping_rem (self : hax_core.primitive.primitive_definitions.t_u8) (rhs : hax_core.primitive.primitive_definitions.t_u8) : hax_core.primitive.primitive_definitions.t_u8 :=
  core.ops.arith.Rem__f_rem (self) (rhs).

Definition impl_6__wrapping_rem_euclid (self : hax_core.primitive.primitive_definitions.t_u8) (rhs : hax_core.primitive.primitive_definitions.t_u8) : hax_core.primitive.primitive_definitions.t_u8 :=
  core.ops.arith.Rem__f_rem (self) (rhs).

Definition impl_6__wrapping_neg (self : hax_core.primitive.primitive_definitions.t_u8) : hax_core.primitive.primitive_definitions.t_u8 :=
  impl_6__wrapping_sub (hax_core.primitive.primitive_definitions.Build_t__u8_u8 (hax_core.base_interface.int.Constants__f_ZERO)) (self).

Definition impl_6__overflowing_add (self : hax_core.primitive.primitive_definitions.t_u8) (rhs : hax_core.primitive.primitive_definitions.t_u8) : (hax_core.primitive.primitive_definitions.t_u8*bool) :=
  add_with_overflow_u8 (self) (rhs).

Definition impl_7__MIN : hax_core.primitive.primitive_definitions.t_u16 :=
  hax_core.primitive.primitive_definitions.Build_t__u16_u16 (hax_core.base_interface.int.Constants__f_MIN).

Definition impl_7__MAX : hax_core.primitive.primitive_definitions.t_u16 :=
  hax_core.primitive.primitive_definitions.Build_t__u16_u16 (hax_core.base_interface.int.Constants__f_MAX).

Definition impl_7__BITS : hax_core.primitive.primitive_definitions.t_u32 :=
  hax_core.primitive.primitive_definitions.Build_t__u32_u32 (hax_core.base_interface.int.impl_257__BITS).

Definition ctpop_u16 (x : hax_core.primitive.primitive_definitions.t_u16) : hax_core.primitive.primitive_definitions.t_u32 :=
  let count : hax_core.primitive.primitive_definitions.t_u32 := core.convert.Into__f_into ((0 : t_u32)) in
  let count := rust_primitives.hax.folds.fold_range ((0 : t_u32)) (core.convert.Into__f_into (impl_7__BITS)) (fun count _ =>
    (true : bool)) (count) (fun count i =>
    core.ops.arith.Add__f_add (count) (core.convert.Into__f_into (core.ops.bit.BitAnd__f_bitand (core.ops.bit.Shr__f_shr (core.clone.Clone__f_clone (x)) (core.convert.Into__f_into (i))) (core.convert.Into__f_into ((1 : t_u16)))))) in
  count.

Definition cttz_u16 (x : hax_core.primitive.primitive_definitions.t_u16) : hax_core.primitive.primitive_definitions.t_u32 :=
  let count : hax_core.primitive.primitive_definitions.t_u32 := core.convert.Into__f_into ((0 : t_u32)) in
  let done := (false : bool) in
  let (count,done) := rust_primitives.hax.folds.fold_range ((0 : t_u32)) (core.convert.Into__f_into (impl_7__BITS)) (fun (count,done) _ =>
    (true : bool)) ((count,done)) (fun (count,done) i =>
    let low_bit : hax_core.primitive.primitive_definitions.t_u32 := core.convert.Into__f_into (core.ops.bit.BitAnd__f_bitand (core.ops.bit.Shr__f_shr (core.clone.Clone__f_clone (x)) (core.convert.Into__f_into (i))) (core.convert.Into__f_into ((1 : t_u16)))) in
    if
      orb (core.cmp.PartialEq__f_eq (low_bit) (core.convert.Into__f_into ((1 : t_u32)))) (done)
    then
      let done := (true : bool) in
      (count,done)
    else
      let count := core.ops.arith.Add__f_add (count) (core.convert.Into__f_into ((1 : t_u32))) in
      (count,done)) in
  count.

Definition ctlz_u16 (x : hax_core.primitive.primitive_definitions.t_u16) : hax_core.primitive.primitive_definitions.t_u32 :=
  let count : hax_core.primitive.primitive_definitions.t_u32 := core.convert.Into__f_into ((0 : t_u32)) in
  let done := (false : bool) in
  let (count,done) := rust_primitives.hax.folds.fold_range ((0 : t_u32)) (core.convert.Into__f_into (impl_7__BITS)) (fun (count,done) _ =>
    (true : bool)) ((count,done)) (fun (count,done) i =>
    let high_bit : hax_core.primitive.primitive_definitions.t_u32 := core.convert.Into__f_into (core.ops.bit.Shr__f_shr (core.ops.bit.Shl__f_shl (core.clone.Clone__f_clone (x)) (core.convert.Into__f_into (i))) (core.convert.Into__f_into (core.ops.arith.Sub__f_sub (impl_7__BITS) (core.convert.Into__f_into ((1 : t_u32)))))) in
    if
      orb (core.cmp.PartialEq__f_eq (high_bit) (core.convert.Into__f_into ((1 : t_u32)))) (done)
    then
      let done := (true : bool) in
      (count,done)
    else
      let count := core.ops.arith.Add__f_add (count) (core.convert.Into__f_into ((1 : t_u32))) in
      (count,done)) in
  count.

Definition rotate_left_u16 (x : hax_core.primitive.primitive_definitions.t_u16) (shift : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u16 :=
  let shift : hax_core.primitive.primitive_definitions.t_u32 := core.ops.arith.Rem__f_rem (shift) (impl_7__BITS) in
  let left : hax_core.primitive.primitive_definitions.t_u16 := core.ops.bit.Shl__f_shl (core.clone.Clone__f_clone (x)) (core.clone.Clone__f_clone (shift)) in
  let right : hax_core.primitive.primitive_definitions.t_u16 := core.ops.bit.Shr__f_shr (core.clone.Clone__f_clone (x)) (core.ops.arith.Sub__f_sub (impl_7__BITS) (core.clone.Clone__f_clone (shift))) in
  core.ops.bit.BitOr__f_bitor (left) (right).

Definition rotate_right_u16 (x : hax_core.primitive.primitive_definitions.t_u16) (shift : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u16 :=
  let shift : hax_core.primitive.primitive_definitions.t_u32 := core.ops.arith.Rem__f_rem (shift) (impl_7__BITS) in
  let left : hax_core.primitive.primitive_definitions.t_u16 := core.ops.bit.Shr__f_shr (core.clone.Clone__f_clone (x)) (core.clone.Clone__f_clone (shift)) in
  let right : hax_core.primitive.primitive_definitions.t_u16 := core.ops.bit.Shl__f_shl (core.clone.Clone__f_clone (x)) (core.ops.arith.Sub__f_sub (impl_7__BITS) (core.clone.Clone__f_clone (shift))) in
  core.ops.bit.BitOr__f_bitor (left) (right).

Definition bswap_u16 (x : hax_core.primitive.primitive_definitions.t_u16) : hax_core.primitive.primitive_definitions.t_u16 :=
  let count : hax_core.primitive.primitive_definitions.t_u16 := core.convert.Into__f_into ((0 : t_u16)) in
  let count := rust_primitives.hax.folds.fold_range ((0 : t_u32)) (core.convert.Into__f_into (impl_7__BITS)) (fun count _ =>
    (true : bool)) (count) (fun count i =>
    let low_bit : hax_core.primitive.primitive_definitions.t_u16 := core.convert.Into__f_into (core.ops.bit.BitAnd__f_bitand (core.ops.bit.Shr__f_shr (core.clone.Clone__f_clone (x)) (core.convert.Into__f_into (i))) (core.convert.Into__f_into ((1 : t_u16)))) in
    let count := core.ops.arith.Add__f_add (core.ops.bit.Shl__f_shl (count) (core.convert.Into__f_into ((1 : t_u32)))) (low_bit) in
    count) in
  count.

Definition impl_7__count_ones (self : hax_core.primitive.primitive_definitions.t_u16) : hax_core.primitive.primitive_definitions.t_u32 :=
  rust_primitives.hax.control_flow_monad.mexception.run (let hoist6 := core.ops.control_flow.ControlFlow_Break (ctpop_u16 (self)) in
  core.ops.control_flow.ControlFlow_Continue (rust_primitives.hax.never_to_any (hoist6))).

Definition impl_7__count_zeros (self : hax_core.primitive.primitive_definitions.t_u16) : hax_core.primitive.primitive_definitions.t_u32 :=
  impl_7__count_ones (core.ops.bit.Not__f_not (self)).

Definition impl_7__leading_zeros (self : hax_core.primitive.primitive_definitions.t_u16) : hax_core.primitive.primitive_definitions.t_u32 :=
  rust_primitives.hax.control_flow_monad.mexception.run (let hoist7 := core.ops.control_flow.ControlFlow_Break (ctlz_u16 (self)) in
  core.ops.control_flow.ControlFlow_Continue (rust_primitives.hax.never_to_any (hoist7))).

Definition impl_7__trailing_zeros (self : hax_core.primitive.primitive_definitions.t_u16) : hax_core.primitive.primitive_definitions.t_u32 :=
  rust_primitives.hax.control_flow_monad.mexception.run (let hoist8 := core.ops.control_flow.ControlFlow_Break (cttz_u16 (self)) in
  core.ops.control_flow.ControlFlow_Continue (rust_primitives.hax.never_to_any (hoist8))).

Definition impl_7__leading_ones (self : hax_core.primitive.primitive_definitions.t_u16) : hax_core.primitive.primitive_definitions.t_u32 :=
  impl_7__leading_zeros (core.ops.bit.Not__f_not (self)).

Definition impl_7__trailing_ones (self : hax_core.primitive.primitive_definitions.t_u16) : hax_core.primitive.primitive_definitions.t_u32 :=
  impl_7__trailing_zeros (core.ops.bit.Not__f_not (self)).

Definition impl_7__rotate_left (self : hax_core.primitive.primitive_definitions.t_u16) (n : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u16 :=
  rust_primitives.hax.control_flow_monad.mexception.run (let hoist9 := core.ops.control_flow.ControlFlow_Break (rotate_left_u16 (self) (n)) in
  core.ops.control_flow.ControlFlow_Continue (rust_primitives.hax.never_to_any (hoist9))).

Definition impl_7__rotate_right (self : hax_core.primitive.primitive_definitions.t_u16) (n : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u16 :=
  rust_primitives.hax.control_flow_monad.mexception.run (let hoist10 := core.ops.control_flow.ControlFlow_Break (rotate_right_u16 (self) (n)) in
  core.ops.control_flow.ControlFlow_Continue (rust_primitives.hax.never_to_any (hoist10))).

Definition impl_7__swap_bytes (self : hax_core.primitive.primitive_definitions.t_u16) : hax_core.primitive.primitive_definitions.t_u16 :=
  core.convert.Into__f_into (bswap_u16 (self)).

Definition impl_7__from_be (x : hax_core.primitive.primitive_definitions.t_u16) : hax_core.primitive.primitive_definitions.t_u16 :=
  impl_7__swap_bytes (x).

Definition impl_7__from_le (x : hax_core.primitive.primitive_definitions.t_u16) : hax_core.primitive.primitive_definitions.t_u16 :=
  x.

Definition impl_7__to_be (self : hax_core.primitive.primitive_definitions.t_u16) : hax_core.primitive.primitive_definitions.t_u16 :=
  impl_7__swap_bytes (self).

Definition impl_7__to_le (self : hax_core.primitive.primitive_definitions.t_u16) : hax_core.primitive.primitive_definitions.t_u16 :=
  self.

Definition impl_7__checked_add (self : hax_core.primitive.primitive_definitions.t_u16) (rhs : hax_core.primitive.primitive_definitions.t_u16) : core.option.t_Option ((hax_core.primitive.primitive_definitions.t_u16)) :=
  core.option.Option_Some (unchecked_add_u16 (self) (rhs)).

Definition impl_7__checked_div (self : hax_core.primitive.primitive_definitions.t_u16) (rhs : hax_core.primitive.primitive_definitions.t_u16) : core.option.t_Option ((hax_core.primitive.primitive_definitions.t_u16)) :=
  if
    core.cmp.PartialEq__f_eq (rhs) (core.convert.Into__f_into ((0 : t_u16)))
  then
    core.option.Option_None
  else
    core.option.Option_Some (unchecked_div_u16 (self) (rhs)).

Definition impl_7__wrapping_add (self : hax_core.primitive.primitive_definitions.t_u16) (rhs : hax_core.primitive.primitive_definitions.t_u16) : hax_core.primitive.primitive_definitions.t_u16 :=
  wrapping_add_u16 (self) (rhs).

Definition impl_7__wrapping_sub (self : hax_core.primitive.primitive_definitions.t_u16) (rhs : hax_core.primitive.primitive_definitions.t_u16) : hax_core.primitive.primitive_definitions.t_u16 :=
  wrapping_sub_u16 (self) (rhs).

Definition impl_7__wrapping_mul (self : hax_core.primitive.primitive_definitions.t_u16) (rhs : hax_core.primitive.primitive_definitions.t_u16) : hax_core.primitive.primitive_definitions.t_u16 :=
  wrapping_mul_u16 (self) (rhs).

Definition impl_7__wrapping_div (self : hax_core.primitive.primitive_definitions.t_u16) (rhs : hax_core.primitive.primitive_definitions.t_u16) : hax_core.primitive.primitive_definitions.t_u16 :=
  core.ops.arith.Div__f_div (self) (rhs).

Definition impl_7__wrapping_div_euclid (self : hax_core.primitive.primitive_definitions.t_u16) (rhs : hax_core.primitive.primitive_definitions.t_u16) : hax_core.primitive.primitive_definitions.t_u16 :=
  core.ops.arith.Div__f_div (self) (rhs).

Definition impl_7__wrapping_rem (self : hax_core.primitive.primitive_definitions.t_u16) (rhs : hax_core.primitive.primitive_definitions.t_u16) : hax_core.primitive.primitive_definitions.t_u16 :=
  core.ops.arith.Rem__f_rem (self) (rhs).

Definition impl_7__wrapping_rem_euclid (self : hax_core.primitive.primitive_definitions.t_u16) (rhs : hax_core.primitive.primitive_definitions.t_u16) : hax_core.primitive.primitive_definitions.t_u16 :=
  core.ops.arith.Rem__f_rem (self) (rhs).

Definition impl_7__wrapping_neg (self : hax_core.primitive.primitive_definitions.t_u16) : hax_core.primitive.primitive_definitions.t_u16 :=
  impl_7__wrapping_sub (hax_core.primitive.primitive_definitions.Build_t__u16_u16 (hax_core.base_interface.int.Constants__f_ZERO)) (self).

Definition impl_7__overflowing_add (self : hax_core.primitive.primitive_definitions.t_u16) (rhs : hax_core.primitive.primitive_definitions.t_u16) : (hax_core.primitive.primitive_definitions.t_u16*bool) :=
  add_with_overflow_u16 (self) (rhs).

Definition impl_8__MIN : hax_core.primitive.primitive_definitions.t_u32 :=
  hax_core.primitive.primitive_definitions.Build_t__u32_u32 (hax_core.base_interface.int.Constants__f_MIN).

Definition impl_8__MAX : hax_core.primitive.primitive_definitions.t_u32 :=
  hax_core.primitive.primitive_definitions.Build_t__u32_u32 (hax_core.base_interface.int.Constants__f_MAX).

Definition impl_8__BITS : hax_core.primitive.primitive_definitions.t_u32 :=
  hax_core.primitive.primitive_definitions.Build_t__u32_u32 (hax_core.base_interface.int.impl_230__BITS).

Definition ctpop_u32 (x : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u32 :=
  let count : hax_core.primitive.primitive_definitions.t_u32 := core.convert.Into__f_into ((0 : t_u32)) in
  let count := rust_primitives.hax.folds.fold_range ((0 : t_u32)) (core.convert.Into__f_into (impl_8__BITS)) (fun count _ =>
    (true : bool)) (count) (fun count i =>
    core.ops.arith.Add__f_add (count) (core.convert.Into__f_into (core.ops.bit.BitAnd__f_bitand (core.ops.bit.Shr__f_shr (core.clone.Clone__f_clone (x)) (core.convert.Into__f_into (i))) (core.convert.Into__f_into ((1 : t_u32)))))) in
  count.

Definition cttz_u32 (x : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u32 :=
  let count : hax_core.primitive.primitive_definitions.t_u32 := core.convert.Into__f_into ((0 : t_u32)) in
  let done := (false : bool) in
  let (count,done) := rust_primitives.hax.folds.fold_range ((0 : t_u32)) (core.convert.Into__f_into (impl_8__BITS)) (fun (count,done) _ =>
    (true : bool)) ((count,done)) (fun (count,done) i =>
    let low_bit : hax_core.primitive.primitive_definitions.t_u32 := core.convert.Into__f_into (core.ops.bit.BitAnd__f_bitand (core.ops.bit.Shr__f_shr (core.clone.Clone__f_clone (x)) (core.convert.Into__f_into (i))) (core.convert.Into__f_into ((1 : t_u32)))) in
    if
      orb (core.cmp.PartialEq__f_eq (low_bit) (core.convert.Into__f_into ((1 : t_u32)))) (done)
    then
      let done := (true : bool) in
      (count,done)
    else
      let count := core.ops.arith.Add__f_add (count) (core.convert.Into__f_into ((1 : t_u32))) in
      (count,done)) in
  count.

Definition ctlz_u32 (x : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u32 :=
  let count : hax_core.primitive.primitive_definitions.t_u32 := core.convert.Into__f_into ((0 : t_u32)) in
  let done := (false : bool) in
  let (count,done) := rust_primitives.hax.folds.fold_range ((0 : t_u32)) (core.convert.Into__f_into (impl_8__BITS)) (fun (count,done) _ =>
    (true : bool)) ((count,done)) (fun (count,done) i =>
    let high_bit : hax_core.primitive.primitive_definitions.t_u32 := core.convert.Into__f_into (core.ops.bit.Shr__f_shr (core.ops.bit.Shl__f_shl (core.clone.Clone__f_clone (x)) (core.convert.Into__f_into (i))) (core.convert.Into__f_into (core.ops.arith.Sub__f_sub (impl_8__BITS) (core.convert.Into__f_into ((1 : t_u32)))))) in
    if
      orb (core.cmp.PartialEq__f_eq (high_bit) (core.convert.Into__f_into ((1 : t_u32)))) (done)
    then
      let done := (true : bool) in
      (count,done)
    else
      let count := core.ops.arith.Add__f_add (count) (core.convert.Into__f_into ((1 : t_u32))) in
      (count,done)) in
  count.

Definition rotate_left_u32 (x : hax_core.primitive.primitive_definitions.t_u32) (shift : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u32 :=
  let shift : hax_core.primitive.primitive_definitions.t_u32 := core.ops.arith.Rem__f_rem (shift) (impl_8__BITS) in
  let left : hax_core.primitive.primitive_definitions.t_u32 := core.ops.bit.Shl__f_shl (core.clone.Clone__f_clone (x)) (core.clone.Clone__f_clone (shift)) in
  let right : hax_core.primitive.primitive_definitions.t_u32 := core.ops.bit.Shr__f_shr (core.clone.Clone__f_clone (x)) (core.ops.arith.Sub__f_sub (impl_8__BITS) (core.clone.Clone__f_clone (shift))) in
  core.ops.bit.BitOr__f_bitor (left) (right).

Definition rotate_right_u32 (x : hax_core.primitive.primitive_definitions.t_u32) (shift : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u32 :=
  let shift : hax_core.primitive.primitive_definitions.t_u32 := core.ops.arith.Rem__f_rem (shift) (impl_8__BITS) in
  let left : hax_core.primitive.primitive_definitions.t_u32 := core.ops.bit.Shr__f_shr (core.clone.Clone__f_clone (x)) (core.clone.Clone__f_clone (shift)) in
  let right : hax_core.primitive.primitive_definitions.t_u32 := core.ops.bit.Shl__f_shl (core.clone.Clone__f_clone (x)) (core.ops.arith.Sub__f_sub (impl_8__BITS) (core.clone.Clone__f_clone (shift))) in
  core.ops.bit.BitOr__f_bitor (left) (right).

Definition bswap_u32 (x : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u32 :=
  let count : hax_core.primitive.primitive_definitions.t_u32 := core.convert.Into__f_into ((0 : t_u32)) in
  let count := rust_primitives.hax.folds.fold_range ((0 : t_u32)) (core.convert.Into__f_into (impl_8__BITS)) (fun count _ =>
    (true : bool)) (count) (fun count i =>
    let low_bit : hax_core.primitive.primitive_definitions.t_u32 := core.convert.Into__f_into (core.ops.bit.BitAnd__f_bitand (core.ops.bit.Shr__f_shr (core.clone.Clone__f_clone (x)) (core.convert.Into__f_into (i))) (core.convert.Into__f_into ((1 : t_u32)))) in
    let count := core.ops.arith.Add__f_add (core.ops.bit.Shl__f_shl (count) (core.convert.Into__f_into ((1 : t_u32)))) (low_bit) in
    count) in
  count.

Definition impl_8__count_ones (self : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u32 :=
  rust_primitives.hax.control_flow_monad.mexception.run (let hoist11 := core.ops.control_flow.ControlFlow_Break (ctpop_u32 (self)) in
  core.ops.control_flow.ControlFlow_Continue (rust_primitives.hax.never_to_any (hoist11))).

Definition impl_8__count_zeros (self : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u32 :=
  impl_8__count_ones (core.ops.bit.Not__f_not (self)).

Definition impl_8__leading_zeros (self : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u32 :=
  rust_primitives.hax.control_flow_monad.mexception.run (let hoist12 := core.ops.control_flow.ControlFlow_Break (ctlz_u32 (self)) in
  core.ops.control_flow.ControlFlow_Continue (rust_primitives.hax.never_to_any (hoist12))).

Definition impl_8__trailing_zeros (self : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u32 :=
  rust_primitives.hax.control_flow_monad.mexception.run (let hoist13 := core.ops.control_flow.ControlFlow_Break (cttz_u32 (self)) in
  core.ops.control_flow.ControlFlow_Continue (rust_primitives.hax.never_to_any (hoist13))).

Definition impl_8__leading_ones (self : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u32 :=
  impl_8__leading_zeros (core.ops.bit.Not__f_not (self)).

Definition impl_8__trailing_ones (self : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u32 :=
  impl_8__trailing_zeros (core.ops.bit.Not__f_not (self)).

Definition impl_8__rotate_left (self : hax_core.primitive.primitive_definitions.t_u32) (n : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u32 :=
  rust_primitives.hax.control_flow_monad.mexception.run (let hoist14 := core.ops.control_flow.ControlFlow_Break (rotate_left_u32 (self) (n)) in
  core.ops.control_flow.ControlFlow_Continue (rust_primitives.hax.never_to_any (hoist14))).

Definition impl_8__rotate_right (self : hax_core.primitive.primitive_definitions.t_u32) (n : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u32 :=
  rust_primitives.hax.control_flow_monad.mexception.run (let hoist15 := core.ops.control_flow.ControlFlow_Break (rotate_right_u32 (self) (n)) in
  core.ops.control_flow.ControlFlow_Continue (rust_primitives.hax.never_to_any (hoist15))).

Definition impl_8__swap_bytes (self : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u32 :=
  core.convert.Into__f_into (bswap_u32 (self)).

Definition impl_8__from_be (x : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u32 :=
  impl_8__swap_bytes (x).

Definition impl_8__from_le (x : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u32 :=
  x.

Definition impl_8__to_be (self : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u32 :=
  impl_8__swap_bytes (self).

Definition impl_8__to_le (self : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u32 :=
  self.

Definition impl_8__checked_add (self : hax_core.primitive.primitive_definitions.t_u32) (rhs : hax_core.primitive.primitive_definitions.t_u32) : core.option.t_Option ((hax_core.primitive.primitive_definitions.t_u32)) :=
  core.option.Option_Some (unchecked_add_u32 (self) (rhs)).

Definition impl_8__checked_div (self : hax_core.primitive.primitive_definitions.t_u32) (rhs : hax_core.primitive.primitive_definitions.t_u32) : core.option.t_Option ((hax_core.primitive.primitive_definitions.t_u32)) :=
  if
    core.cmp.PartialEq__f_eq (rhs) (core.convert.Into__f_into ((0 : t_u32)))
  then
    core.option.Option_None
  else
    core.option.Option_Some (unchecked_div_u32 (self) (rhs)).

Definition impl_8__wrapping_add (self : hax_core.primitive.primitive_definitions.t_u32) (rhs : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u32 :=
  wrapping_add_u32 (self) (rhs).

Definition impl_8__wrapping_sub (self : hax_core.primitive.primitive_definitions.t_u32) (rhs : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u32 :=
  wrapping_sub_u32 (self) (rhs).

Definition impl_8__wrapping_mul (self : hax_core.primitive.primitive_definitions.t_u32) (rhs : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u32 :=
  wrapping_mul_u32 (self) (rhs).

Definition impl_8__wrapping_div (self : hax_core.primitive.primitive_definitions.t_u32) (rhs : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u32 :=
  core.ops.arith.Div__f_div (self) (rhs).

Definition impl_8__wrapping_div_euclid (self : hax_core.primitive.primitive_definitions.t_u32) (rhs : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u32 :=
  core.ops.arith.Div__f_div (self) (rhs).

Definition impl_8__wrapping_rem (self : hax_core.primitive.primitive_definitions.t_u32) (rhs : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u32 :=
  core.ops.arith.Rem__f_rem (self) (rhs).

Definition impl_8__wrapping_rem_euclid (self : hax_core.primitive.primitive_definitions.t_u32) (rhs : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u32 :=
  core.ops.arith.Rem__f_rem (self) (rhs).

Definition impl_8__wrapping_neg (self : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u32 :=
  impl_8__wrapping_sub (hax_core.primitive.primitive_definitions.Build_t__u32_u32 (hax_core.base_interface.int.Constants__f_ZERO)) (self).

Definition impl_8__overflowing_add (self : hax_core.primitive.primitive_definitions.t_u32) (rhs : hax_core.primitive.primitive_definitions.t_u32) : (hax_core.primitive.primitive_definitions.t_u32*bool) :=
  add_with_overflow_u32 (self) (rhs).

Definition impl_9__MIN : hax_core.primitive.primitive_definitions.t_u64 :=
  hax_core.primitive.primitive_definitions.Build_t__u64_u64 (hax_core.base_interface.int.Constants__f_MIN).

Definition impl_9__MAX : hax_core.primitive.primitive_definitions.t_u64 :=
  hax_core.primitive.primitive_definitions.Build_t__u64_u64 (hax_core.base_interface.int.Constants__f_MAX).

Definition impl_9__BITS : hax_core.primitive.primitive_definitions.t_u32 :=
  hax_core.primitive.primitive_definitions.Build_t__u32_u32 (hax_core.base_interface.int.impl_203__BITS).

Definition ctpop_u64 (x : hax_core.primitive.primitive_definitions.t_u64) : hax_core.primitive.primitive_definitions.t_u32 :=
  let count : hax_core.primitive.primitive_definitions.t_u32 := core.convert.Into__f_into ((0 : t_u32)) in
  let count := rust_primitives.hax.folds.fold_range ((0 : t_u32)) (core.convert.Into__f_into (impl_9__BITS)) (fun count _ =>
    (true : bool)) (count) (fun count i =>
    core.ops.arith.Add__f_add (count) (core.convert.Into__f_into (core.ops.bit.BitAnd__f_bitand (core.ops.bit.Shr__f_shr (core.clone.Clone__f_clone (x)) (core.convert.Into__f_into (i))) (core.convert.Into__f_into ((1 : t_u64)))))) in
  count.

Definition cttz_u64 (x : hax_core.primitive.primitive_definitions.t_u64) : hax_core.primitive.primitive_definitions.t_u32 :=
  let count : hax_core.primitive.primitive_definitions.t_u32 := core.convert.Into__f_into ((0 : t_u32)) in
  let done := (false : bool) in
  let (count,done) := rust_primitives.hax.folds.fold_range ((0 : t_u32)) (core.convert.Into__f_into (impl_9__BITS)) (fun (count,done) _ =>
    (true : bool)) ((count,done)) (fun (count,done) i =>
    let low_bit : hax_core.primitive.primitive_definitions.t_u32 := core.convert.Into__f_into (core.ops.bit.BitAnd__f_bitand (core.ops.bit.Shr__f_shr (core.clone.Clone__f_clone (x)) (core.convert.Into__f_into (i))) (core.convert.Into__f_into ((1 : t_u64)))) in
    if
      orb (core.cmp.PartialEq__f_eq (low_bit) (core.convert.Into__f_into ((1 : t_u32)))) (done)
    then
      let done := (true : bool) in
      (count,done)
    else
      let count := core.ops.arith.Add__f_add (count) (core.convert.Into__f_into ((1 : t_u32))) in
      (count,done)) in
  count.

Definition ctlz_u64 (x : hax_core.primitive.primitive_definitions.t_u64) : hax_core.primitive.primitive_definitions.t_u32 :=
  let count : hax_core.primitive.primitive_definitions.t_u32 := core.convert.Into__f_into ((0 : t_u32)) in
  let done := (false : bool) in
  let (count,done) := rust_primitives.hax.folds.fold_range ((0 : t_u32)) (core.convert.Into__f_into (impl_9__BITS)) (fun (count,done) _ =>
    (true : bool)) ((count,done)) (fun (count,done) i =>
    let high_bit : hax_core.primitive.primitive_definitions.t_u32 := core.convert.Into__f_into (core.ops.bit.Shr__f_shr (core.ops.bit.Shl__f_shl (core.clone.Clone__f_clone (x)) (core.convert.Into__f_into (i))) (core.convert.Into__f_into (core.ops.arith.Sub__f_sub (impl_9__BITS) (core.convert.Into__f_into ((1 : t_u32)))))) in
    if
      orb (core.cmp.PartialEq__f_eq (high_bit) (core.convert.Into__f_into ((1 : t_u32)))) (done)
    then
      let done := (true : bool) in
      (count,done)
    else
      let count := core.ops.arith.Add__f_add (count) (core.convert.Into__f_into ((1 : t_u32))) in
      (count,done)) in
  count.

Definition rotate_left_u64 (x : hax_core.primitive.primitive_definitions.t_u64) (shift : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u64 :=
  let shift : hax_core.primitive.primitive_definitions.t_u32 := core.ops.arith.Rem__f_rem (shift) (impl_9__BITS) in
  let left : hax_core.primitive.primitive_definitions.t_u64 := core.ops.bit.Shl__f_shl (core.clone.Clone__f_clone (x)) (core.clone.Clone__f_clone (shift)) in
  let right : hax_core.primitive.primitive_definitions.t_u64 := core.ops.bit.Shr__f_shr (core.clone.Clone__f_clone (x)) (core.ops.arith.Sub__f_sub (impl_9__BITS) (core.clone.Clone__f_clone (shift))) in
  core.ops.bit.BitOr__f_bitor (left) (right).

Definition rotate_right_u64 (x : hax_core.primitive.primitive_definitions.t_u64) (shift : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u64 :=
  let shift : hax_core.primitive.primitive_definitions.t_u32 := core.ops.arith.Rem__f_rem (shift) (impl_9__BITS) in
  let left : hax_core.primitive.primitive_definitions.t_u64 := core.ops.bit.Shr__f_shr (core.clone.Clone__f_clone (x)) (core.clone.Clone__f_clone (shift)) in
  let right : hax_core.primitive.primitive_definitions.t_u64 := core.ops.bit.Shl__f_shl (core.clone.Clone__f_clone (x)) (core.ops.arith.Sub__f_sub (impl_9__BITS) (core.clone.Clone__f_clone (shift))) in
  core.ops.bit.BitOr__f_bitor (left) (right).

Definition bswap_u64 (x : hax_core.primitive.primitive_definitions.t_u64) : hax_core.primitive.primitive_definitions.t_u64 :=
  let count : hax_core.primitive.primitive_definitions.t_u64 := core.convert.Into__f_into ((0 : t_u64)) in
  let count := rust_primitives.hax.folds.fold_range ((0 : t_u32)) (core.convert.Into__f_into (impl_9__BITS)) (fun count _ =>
    (true : bool)) (count) (fun count i =>
    let low_bit : hax_core.primitive.primitive_definitions.t_u64 := core.convert.Into__f_into (core.ops.bit.BitAnd__f_bitand (core.ops.bit.Shr__f_shr (core.clone.Clone__f_clone (x)) (core.convert.Into__f_into (i))) (core.convert.Into__f_into ((1 : t_u64)))) in
    let count := core.ops.arith.Add__f_add (core.ops.bit.Shl__f_shl (count) (core.convert.Into__f_into ((1 : t_u32)))) (low_bit) in
    count) in
  count.

Definition impl_9__count_ones (self : hax_core.primitive.primitive_definitions.t_u64) : hax_core.primitive.primitive_definitions.t_u32 :=
  rust_primitives.hax.control_flow_monad.mexception.run (let hoist16 := core.ops.control_flow.ControlFlow_Break (ctpop_u64 (self)) in
  core.ops.control_flow.ControlFlow_Continue (rust_primitives.hax.never_to_any (hoist16))).

Definition impl_9__count_zeros (self : hax_core.primitive.primitive_definitions.t_u64) : hax_core.primitive.primitive_definitions.t_u32 :=
  impl_9__count_ones (core.ops.bit.Not__f_not (self)).

Definition impl_9__leading_zeros (self : hax_core.primitive.primitive_definitions.t_u64) : hax_core.primitive.primitive_definitions.t_u32 :=
  rust_primitives.hax.control_flow_monad.mexception.run (let hoist17 := core.ops.control_flow.ControlFlow_Break (ctlz_u64 (self)) in
  core.ops.control_flow.ControlFlow_Continue (rust_primitives.hax.never_to_any (hoist17))).

Definition impl_9__trailing_zeros (self : hax_core.primitive.primitive_definitions.t_u64) : hax_core.primitive.primitive_definitions.t_u32 :=
  rust_primitives.hax.control_flow_monad.mexception.run (let hoist18 := core.ops.control_flow.ControlFlow_Break (cttz_u64 (self)) in
  core.ops.control_flow.ControlFlow_Continue (rust_primitives.hax.never_to_any (hoist18))).

Definition impl_9__leading_ones (self : hax_core.primitive.primitive_definitions.t_u64) : hax_core.primitive.primitive_definitions.t_u32 :=
  impl_9__leading_zeros (core.ops.bit.Not__f_not (self)).

Definition impl_9__trailing_ones (self : hax_core.primitive.primitive_definitions.t_u64) : hax_core.primitive.primitive_definitions.t_u32 :=
  impl_9__trailing_zeros (core.ops.bit.Not__f_not (self)).

Definition impl_9__rotate_left (self : hax_core.primitive.primitive_definitions.t_u64) (n : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u64 :=
  rust_primitives.hax.control_flow_monad.mexception.run (let hoist19 := core.ops.control_flow.ControlFlow_Break (rotate_left_u64 (self) (n)) in
  core.ops.control_flow.ControlFlow_Continue (rust_primitives.hax.never_to_any (hoist19))).

Definition impl_9__rotate_right (self : hax_core.primitive.primitive_definitions.t_u64) (n : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u64 :=
  rust_primitives.hax.control_flow_monad.mexception.run (let hoist20 := core.ops.control_flow.ControlFlow_Break (rotate_right_u64 (self) (n)) in
  core.ops.control_flow.ControlFlow_Continue (rust_primitives.hax.never_to_any (hoist20))).

Definition impl_9__swap_bytes (self : hax_core.primitive.primitive_definitions.t_u64) : hax_core.primitive.primitive_definitions.t_u64 :=
  core.convert.Into__f_into (bswap_u64 (self)).

Definition impl_9__from_be (x : hax_core.primitive.primitive_definitions.t_u64) : hax_core.primitive.primitive_definitions.t_u64 :=
  impl_9__swap_bytes (x).

Definition impl_9__from_le (x : hax_core.primitive.primitive_definitions.t_u64) : hax_core.primitive.primitive_definitions.t_u64 :=
  x.

Definition impl_9__to_be (self : hax_core.primitive.primitive_definitions.t_u64) : hax_core.primitive.primitive_definitions.t_u64 :=
  impl_9__swap_bytes (self).

Definition impl_9__to_le (self : hax_core.primitive.primitive_definitions.t_u64) : hax_core.primitive.primitive_definitions.t_u64 :=
  self.

Definition impl_9__checked_add (self : hax_core.primitive.primitive_definitions.t_u64) (rhs : hax_core.primitive.primitive_definitions.t_u64) : core.option.t_Option ((hax_core.primitive.primitive_definitions.t_u64)) :=
  core.option.Option_Some (unchecked_add_u64 (self) (rhs)).

Definition impl_9__checked_div (self : hax_core.primitive.primitive_definitions.t_u64) (rhs : hax_core.primitive.primitive_definitions.t_u64) : core.option.t_Option ((hax_core.primitive.primitive_definitions.t_u64)) :=
  if
    core.cmp.PartialEq__f_eq (rhs) (core.convert.Into__f_into ((0 : t_u64)))
  then
    core.option.Option_None
  else
    core.option.Option_Some (unchecked_div_u64 (self) (rhs)).

Definition impl_9__wrapping_add (self : hax_core.primitive.primitive_definitions.t_u64) (rhs : hax_core.primitive.primitive_definitions.t_u64) : hax_core.primitive.primitive_definitions.t_u64 :=
  wrapping_add_u64 (self) (rhs).

Definition impl_9__wrapping_sub (self : hax_core.primitive.primitive_definitions.t_u64) (rhs : hax_core.primitive.primitive_definitions.t_u64) : hax_core.primitive.primitive_definitions.t_u64 :=
  wrapping_sub_u64 (self) (rhs).

Definition impl_9__wrapping_mul (self : hax_core.primitive.primitive_definitions.t_u64) (rhs : hax_core.primitive.primitive_definitions.t_u64) : hax_core.primitive.primitive_definitions.t_u64 :=
  wrapping_mul_u64 (self) (rhs).

Definition impl_9__wrapping_div (self : hax_core.primitive.primitive_definitions.t_u64) (rhs : hax_core.primitive.primitive_definitions.t_u64) : hax_core.primitive.primitive_definitions.t_u64 :=
  core.ops.arith.Div__f_div (self) (rhs).

Definition impl_9__wrapping_div_euclid (self : hax_core.primitive.primitive_definitions.t_u64) (rhs : hax_core.primitive.primitive_definitions.t_u64) : hax_core.primitive.primitive_definitions.t_u64 :=
  core.ops.arith.Div__f_div (self) (rhs).

Definition impl_9__wrapping_rem (self : hax_core.primitive.primitive_definitions.t_u64) (rhs : hax_core.primitive.primitive_definitions.t_u64) : hax_core.primitive.primitive_definitions.t_u64 :=
  core.ops.arith.Rem__f_rem (self) (rhs).

Definition impl_9__wrapping_rem_euclid (self : hax_core.primitive.primitive_definitions.t_u64) (rhs : hax_core.primitive.primitive_definitions.t_u64) : hax_core.primitive.primitive_definitions.t_u64 :=
  core.ops.arith.Rem__f_rem (self) (rhs).

Definition impl_9__wrapping_neg (self : hax_core.primitive.primitive_definitions.t_u64) : hax_core.primitive.primitive_definitions.t_u64 :=
  impl_9__wrapping_sub (hax_core.primitive.primitive_definitions.Build_t__u64_u64 (hax_core.base_interface.int.Constants__f_ZERO)) (self).

Definition impl_9__overflowing_add (self : hax_core.primitive.primitive_definitions.t_u64) (rhs : hax_core.primitive.primitive_definitions.t_u64) : (hax_core.primitive.primitive_definitions.t_u64*bool) :=
  add_with_overflow_u64 (self) (rhs).

Definition impl_10__MIN : hax_core.primitive.primitive_definitions.t_u128 :=
  hax_core.primitive.primitive_definitions.Build_t__u128_u128 (hax_core.base_interface.int.Constants__f_MIN).

Definition impl_10__MAX : hax_core.primitive.primitive_definitions.t_u128 :=
  hax_core.primitive.primitive_definitions.Build_t__u128_u128 (hax_core.base_interface.int.Constants__f_MAX).

Definition impl_10__BITS : hax_core.primitive.primitive_definitions.t_u32 :=
  hax_core.primitive.primitive_definitions.Build_t__u32_u32 (hax_core.base_interface.int.impl_176__BITS).

Definition ctpop_u128 (x : hax_core.primitive.primitive_definitions.t_u128) : hax_core.primitive.primitive_definitions.t_u32 :=
  let count : hax_core.primitive.primitive_definitions.t_u32 := core.convert.Into__f_into ((0 : t_u32)) in
  let count := rust_primitives.hax.folds.fold_range ((0 : t_u32)) (core.convert.Into__f_into (impl_10__BITS)) (fun count _ =>
    (true : bool)) (count) (fun count i =>
    core.ops.arith.Add__f_add (count) (core.convert.Into__f_into (core.ops.bit.BitAnd__f_bitand (core.ops.bit.Shr__f_shr (core.clone.Clone__f_clone (x)) (core.convert.Into__f_into (i))) (core.convert.Into__f_into ((1 : t_u128)))))) in
  count.

Definition cttz_u128 (x : hax_core.primitive.primitive_definitions.t_u128) : hax_core.primitive.primitive_definitions.t_u32 :=
  let count : hax_core.primitive.primitive_definitions.t_u32 := core.convert.Into__f_into ((0 : t_u32)) in
  let done := (false : bool) in
  let (count,done) := rust_primitives.hax.folds.fold_range ((0 : t_u32)) (core.convert.Into__f_into (impl_10__BITS)) (fun (count,done) _ =>
    (true : bool)) ((count,done)) (fun (count,done) i =>
    let low_bit : hax_core.primitive.primitive_definitions.t_u32 := core.convert.Into__f_into (core.ops.bit.BitAnd__f_bitand (core.ops.bit.Shr__f_shr (core.clone.Clone__f_clone (x)) (core.convert.Into__f_into (i))) (core.convert.Into__f_into ((1 : t_u128)))) in
    if
      orb (core.cmp.PartialEq__f_eq (low_bit) (core.convert.Into__f_into ((1 : t_u32)))) (done)
    then
      let done := (true : bool) in
      (count,done)
    else
      let count := core.ops.arith.Add__f_add (count) (core.convert.Into__f_into ((1 : t_u32))) in
      (count,done)) in
  count.

Definition ctlz_u128 (x : hax_core.primitive.primitive_definitions.t_u128) : hax_core.primitive.primitive_definitions.t_u32 :=
  let count : hax_core.primitive.primitive_definitions.t_u32 := core.convert.Into__f_into ((0 : t_u32)) in
  let done := (false : bool) in
  let (count,done) := rust_primitives.hax.folds.fold_range ((0 : t_u32)) (core.convert.Into__f_into (impl_10__BITS)) (fun (count,done) _ =>
    (true : bool)) ((count,done)) (fun (count,done) i =>
    let high_bit : hax_core.primitive.primitive_definitions.t_u32 := core.convert.Into__f_into (core.ops.bit.Shr__f_shr (core.ops.bit.Shl__f_shl (core.clone.Clone__f_clone (x)) (core.convert.Into__f_into (i))) (core.convert.Into__f_into (core.ops.arith.Sub__f_sub (impl_10__BITS) (core.convert.Into__f_into ((1 : t_u32)))))) in
    if
      orb (core.cmp.PartialEq__f_eq (high_bit) (core.convert.Into__f_into ((1 : t_u32)))) (done)
    then
      let done := (true : bool) in
      (count,done)
    else
      let count := core.ops.arith.Add__f_add (count) (core.convert.Into__f_into ((1 : t_u32))) in
      (count,done)) in
  count.

Definition rotate_left_u128 (x : hax_core.primitive.primitive_definitions.t_u128) (shift : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u128 :=
  let shift : hax_core.primitive.primitive_definitions.t_u32 := core.ops.arith.Rem__f_rem (shift) (impl_10__BITS) in
  let left : hax_core.primitive.primitive_definitions.t_u128 := core.ops.bit.Shl__f_shl (core.clone.Clone__f_clone (x)) (core.clone.Clone__f_clone (shift)) in
  let right : hax_core.primitive.primitive_definitions.t_u128 := core.ops.bit.Shr__f_shr (core.clone.Clone__f_clone (x)) (core.ops.arith.Sub__f_sub (impl_10__BITS) (core.clone.Clone__f_clone (shift))) in
  core.ops.bit.BitOr__f_bitor (left) (right).

Definition rotate_right_u128 (x : hax_core.primitive.primitive_definitions.t_u128) (shift : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u128 :=
  let shift : hax_core.primitive.primitive_definitions.t_u32 := core.ops.arith.Rem__f_rem (shift) (impl_10__BITS) in
  let left : hax_core.primitive.primitive_definitions.t_u128 := core.ops.bit.Shr__f_shr (core.clone.Clone__f_clone (x)) (core.clone.Clone__f_clone (shift)) in
  let right : hax_core.primitive.primitive_definitions.t_u128 := core.ops.bit.Shl__f_shl (core.clone.Clone__f_clone (x)) (core.ops.arith.Sub__f_sub (impl_10__BITS) (core.clone.Clone__f_clone (shift))) in
  core.ops.bit.BitOr__f_bitor (left) (right).

Definition bswap_u128 (x : hax_core.primitive.primitive_definitions.t_u128) : hax_core.primitive.primitive_definitions.t_u128 :=
  let count : hax_core.primitive.primitive_definitions.t_u128 := core.convert.Into__f_into ((0 : t_u128)) in
  let count := rust_primitives.hax.folds.fold_range ((0 : t_u32)) (core.convert.Into__f_into (impl_10__BITS)) (fun count _ =>
    (true : bool)) (count) (fun count i =>
    let low_bit : hax_core.primitive.primitive_definitions.t_u128 := core.convert.Into__f_into (core.ops.bit.BitAnd__f_bitand (core.ops.bit.Shr__f_shr (core.clone.Clone__f_clone (x)) (core.convert.Into__f_into (i))) (core.convert.Into__f_into ((1 : t_u128)))) in
    let count := core.ops.arith.Add__f_add (core.ops.bit.Shl__f_shl (count) (core.convert.Into__f_into ((1 : t_u32)))) (low_bit) in
    count) in
  count.

Definition impl_10__count_ones (self : hax_core.primitive.primitive_definitions.t_u128) : hax_core.primitive.primitive_definitions.t_u32 :=
  rust_primitives.hax.control_flow_monad.mexception.run (let hoist21 := core.ops.control_flow.ControlFlow_Break (ctpop_u128 (self)) in
  core.ops.control_flow.ControlFlow_Continue (rust_primitives.hax.never_to_any (hoist21))).

Definition impl_10__count_zeros (self : hax_core.primitive.primitive_definitions.t_u128) : hax_core.primitive.primitive_definitions.t_u32 :=
  impl_10__count_ones (core.ops.bit.Not__f_not (self)).

Definition impl_10__leading_zeros (self : hax_core.primitive.primitive_definitions.t_u128) : hax_core.primitive.primitive_definitions.t_u32 :=
  rust_primitives.hax.control_flow_monad.mexception.run (let hoist22 := core.ops.control_flow.ControlFlow_Break (ctlz_u128 (self)) in
  core.ops.control_flow.ControlFlow_Continue (rust_primitives.hax.never_to_any (hoist22))).

Definition impl_10__trailing_zeros (self : hax_core.primitive.primitive_definitions.t_u128) : hax_core.primitive.primitive_definitions.t_u32 :=
  rust_primitives.hax.control_flow_monad.mexception.run (let hoist23 := core.ops.control_flow.ControlFlow_Break (cttz_u128 (self)) in
  core.ops.control_flow.ControlFlow_Continue (rust_primitives.hax.never_to_any (hoist23))).

Definition impl_10__leading_ones (self : hax_core.primitive.primitive_definitions.t_u128) : hax_core.primitive.primitive_definitions.t_u32 :=
  impl_10__leading_zeros (core.ops.bit.Not__f_not (self)).

Definition impl_10__trailing_ones (self : hax_core.primitive.primitive_definitions.t_u128) : hax_core.primitive.primitive_definitions.t_u32 :=
  impl_10__trailing_zeros (core.ops.bit.Not__f_not (self)).

Definition impl_10__rotate_left (self : hax_core.primitive.primitive_definitions.t_u128) (n : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u128 :=
  rust_primitives.hax.control_flow_monad.mexception.run (let hoist24 := core.ops.control_flow.ControlFlow_Break (rotate_left_u128 (self) (n)) in
  core.ops.control_flow.ControlFlow_Continue (rust_primitives.hax.never_to_any (hoist24))).

Definition impl_10__rotate_right (self : hax_core.primitive.primitive_definitions.t_u128) (n : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_u128 :=
  rust_primitives.hax.control_flow_monad.mexception.run (let hoist25 := core.ops.control_flow.ControlFlow_Break (rotate_right_u128 (self) (n)) in
  core.ops.control_flow.ControlFlow_Continue (rust_primitives.hax.never_to_any (hoist25))).

Definition impl_10__swap_bytes (self : hax_core.primitive.primitive_definitions.t_u128) : hax_core.primitive.primitive_definitions.t_u128 :=
  core.convert.Into__f_into (bswap_u128 (self)).

Definition impl_10__from_be (x : hax_core.primitive.primitive_definitions.t_u128) : hax_core.primitive.primitive_definitions.t_u128 :=
  impl_10__swap_bytes (x).

Definition impl_10__from_le (x : hax_core.primitive.primitive_definitions.t_u128) : hax_core.primitive.primitive_definitions.t_u128 :=
  x.

Definition impl_10__to_be (self : hax_core.primitive.primitive_definitions.t_u128) : hax_core.primitive.primitive_definitions.t_u128 :=
  impl_10__swap_bytes (self).

Definition impl_10__to_le (self : hax_core.primitive.primitive_definitions.t_u128) : hax_core.primitive.primitive_definitions.t_u128 :=
  self.

Definition impl_10__checked_add (self : hax_core.primitive.primitive_definitions.t_u128) (rhs : hax_core.primitive.primitive_definitions.t_u128) : core.option.t_Option ((hax_core.primitive.primitive_definitions.t_u128)) :=
  core.option.Option_Some (unchecked_add_u128 (self) (rhs)).

Definition impl_10__checked_div (self : hax_core.primitive.primitive_definitions.t_u128) (rhs : hax_core.primitive.primitive_definitions.t_u128) : core.option.t_Option ((hax_core.primitive.primitive_definitions.t_u128)) :=
  if
    core.cmp.PartialEq__f_eq (rhs) (core.convert.Into__f_into ((0 : t_u128)))
  then
    core.option.Option_None
  else
    core.option.Option_Some (unchecked_div_u128 (self) (rhs)).

Definition impl_10__wrapping_add (self : hax_core.primitive.primitive_definitions.t_u128) (rhs : hax_core.primitive.primitive_definitions.t_u128) : hax_core.primitive.primitive_definitions.t_u128 :=
  wrapping_add_u128 (self) (rhs).

Definition impl_10__wrapping_sub (self : hax_core.primitive.primitive_definitions.t_u128) (rhs : hax_core.primitive.primitive_definitions.t_u128) : hax_core.primitive.primitive_definitions.t_u128 :=
  wrapping_sub_u128 (self) (rhs).

Definition impl_10__wrapping_mul (self : hax_core.primitive.primitive_definitions.t_u128) (rhs : hax_core.primitive.primitive_definitions.t_u128) : hax_core.primitive.primitive_definitions.t_u128 :=
  wrapping_mul_u128 (self) (rhs).

Definition impl_10__wrapping_div (self : hax_core.primitive.primitive_definitions.t_u128) (rhs : hax_core.primitive.primitive_definitions.t_u128) : hax_core.primitive.primitive_definitions.t_u128 :=
  core.ops.arith.Div__f_div (self) (rhs).

Definition impl_10__wrapping_div_euclid (self : hax_core.primitive.primitive_definitions.t_u128) (rhs : hax_core.primitive.primitive_definitions.t_u128) : hax_core.primitive.primitive_definitions.t_u128 :=
  core.ops.arith.Div__f_div (self) (rhs).

Definition impl_10__wrapping_rem (self : hax_core.primitive.primitive_definitions.t_u128) (rhs : hax_core.primitive.primitive_definitions.t_u128) : hax_core.primitive.primitive_definitions.t_u128 :=
  core.ops.arith.Rem__f_rem (self) (rhs).

Definition impl_10__wrapping_rem_euclid (self : hax_core.primitive.primitive_definitions.t_u128) (rhs : hax_core.primitive.primitive_definitions.t_u128) : hax_core.primitive.primitive_definitions.t_u128 :=
  core.ops.arith.Rem__f_rem (self) (rhs).

Definition impl_10__wrapping_neg (self : hax_core.primitive.primitive_definitions.t_u128) : hax_core.primitive.primitive_definitions.t_u128 :=
  impl_10__wrapping_sub (hax_core.primitive.primitive_definitions.Build_t__u128_u128 (hax_core.base_interface.int.Constants__f_ZERO)) (self).

Definition impl_10__overflowing_add (self : hax_core.primitive.primitive_definitions.t_u128) (rhs : hax_core.primitive.primitive_definitions.t_u128) : (hax_core.primitive.primitive_definitions.t_u128*bool) :=
  add_with_overflow_u128 (self) (rhs).

Definition impl_11__MIN : hax_core.primitive.primitive_definitions.t_usize :=
  hax_core.primitive.primitive_definitions.Build_t__usize_usize (hax_core.base_interface.int.Constants__f_MIN).

Definition impl_11__MAX : hax_core.primitive.primitive_definitions.t_usize :=
  hax_core.primitive.primitive_definitions.Build_t__usize_usize (hax_core.base_interface.int.Constants__f_MAX).

Definition impl_11__BITS : hax_core.primitive.primitive_definitions.t_u32 :=
  hax_core.primitive.primitive_definitions.Build_t__u32_u32 (hax_core.base_interface.int.impl_203__BITS).

Definition ctpop_usize (x : hax_core.primitive.primitive_definitions.t_usize) : hax_core.primitive.primitive_definitions.t_u32 :=
  let count : hax_core.primitive.primitive_definitions.t_u32 := core.convert.Into__f_into ((0 : t_u32)) in
  let count := rust_primitives.hax.folds.fold_range ((0 : t_u32)) (core.convert.Into__f_into (impl_11__BITS)) (fun count _ =>
    (true : bool)) (count) (fun count i =>
    core.ops.arith.Add__f_add (count) (core.convert.Into__f_into (core.ops.bit.BitAnd__f_bitand (core.ops.bit.Shr__f_shr (core.clone.Clone__f_clone (x)) (core.convert.Into__f_into (i))) (core.convert.Into__f_into ((1 : t_usize)))))) in
  count.

Definition cttz_usize (x : hax_core.primitive.primitive_definitions.t_usize) : hax_core.primitive.primitive_definitions.t_u32 :=
  let count : hax_core.primitive.primitive_definitions.t_u32 := core.convert.Into__f_into ((0 : t_u32)) in
  let done := (false : bool) in
  let (count,done) := rust_primitives.hax.folds.fold_range ((0 : t_u32)) (core.convert.Into__f_into (impl_11__BITS)) (fun (count,done) _ =>
    (true : bool)) ((count,done)) (fun (count,done) i =>
    let low_bit : hax_core.primitive.primitive_definitions.t_u32 := core.convert.Into__f_into (core.ops.bit.BitAnd__f_bitand (core.ops.bit.Shr__f_shr (core.clone.Clone__f_clone (x)) (core.convert.Into__f_into (i))) (core.convert.Into__f_into ((1 : t_usize)))) in
    if
      orb (core.cmp.PartialEq__f_eq (low_bit) (core.convert.Into__f_into ((1 : t_u32)))) (done)
    then
      let done := (true : bool) in
      (count,done)
    else
      let count := core.ops.arith.Add__f_add (count) (core.convert.Into__f_into ((1 : t_u32))) in
      (count,done)) in
  count.

Definition ctlz_usize (x : hax_core.primitive.primitive_definitions.t_usize) : hax_core.primitive.primitive_definitions.t_u32 :=
  let count : hax_core.primitive.primitive_definitions.t_u32 := core.convert.Into__f_into ((0 : t_u32)) in
  let done := (false : bool) in
  let (count,done) := rust_primitives.hax.folds.fold_range ((0 : t_u32)) (core.convert.Into__f_into (impl_11__BITS)) (fun (count,done) _ =>
    (true : bool)) ((count,done)) (fun (count,done) i =>
    let high_bit : hax_core.primitive.primitive_definitions.t_u32 := core.convert.Into__f_into (core.ops.bit.Shr__f_shr (core.ops.bit.Shl__f_shl (core.clone.Clone__f_clone (x)) (core.convert.Into__f_into (i))) (core.convert.Into__f_into (core.ops.arith.Sub__f_sub (impl_11__BITS) (core.convert.Into__f_into ((1 : t_u32)))))) in
    if
      orb (core.cmp.PartialEq__f_eq (high_bit) (core.convert.Into__f_into ((1 : t_u32)))) (done)
    then
      let done := (true : bool) in
      (count,done)
    else
      let count := core.ops.arith.Add__f_add (count) (core.convert.Into__f_into ((1 : t_u32))) in
      (count,done)) in
  count.

Definition rotate_left_usize (x : hax_core.primitive.primitive_definitions.t_usize) (shift : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_usize :=
  let shift : hax_core.primitive.primitive_definitions.t_u32 := core.ops.arith.Rem__f_rem (shift) (impl_11__BITS) in
  let left : hax_core.primitive.primitive_definitions.t_usize := core.ops.bit.Shl__f_shl (core.clone.Clone__f_clone (x)) (core.clone.Clone__f_clone (shift)) in
  let right : hax_core.primitive.primitive_definitions.t_usize := core.ops.bit.Shr__f_shr (core.clone.Clone__f_clone (x)) (core.ops.arith.Sub__f_sub (impl_11__BITS) (core.clone.Clone__f_clone (shift))) in
  core.ops.bit.BitOr__f_bitor (left) (right).

Definition rotate_right_usize (x : hax_core.primitive.primitive_definitions.t_usize) (shift : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_usize :=
  let shift : hax_core.primitive.primitive_definitions.t_u32 := core.ops.arith.Rem__f_rem (shift) (impl_11__BITS) in
  let left : hax_core.primitive.primitive_definitions.t_usize := core.ops.bit.Shr__f_shr (core.clone.Clone__f_clone (x)) (core.clone.Clone__f_clone (shift)) in
  let right : hax_core.primitive.primitive_definitions.t_usize := core.ops.bit.Shl__f_shl (core.clone.Clone__f_clone (x)) (core.ops.arith.Sub__f_sub (impl_11__BITS) (core.clone.Clone__f_clone (shift))) in
  core.ops.bit.BitOr__f_bitor (left) (right).

Definition bswap_usize (x : hax_core.primitive.primitive_definitions.t_usize) : hax_core.primitive.primitive_definitions.t_usize :=
  let count : hax_core.primitive.primitive_definitions.t_usize := core.convert.Into__f_into ((0 : t_usize)) in
  let count := rust_primitives.hax.folds.fold_range ((0 : t_u32)) (core.convert.Into__f_into (impl_11__BITS)) (fun count _ =>
    (true : bool)) (count) (fun count i =>
    let low_bit : hax_core.primitive.primitive_definitions.t_usize := core.convert.Into__f_into (core.ops.bit.BitAnd__f_bitand (core.ops.bit.Shr__f_shr (core.clone.Clone__f_clone (x)) (core.convert.Into__f_into (i))) (core.convert.Into__f_into ((1 : t_usize)))) in
    let count := core.ops.arith.Add__f_add (core.ops.bit.Shl__f_shl (count) (core.convert.Into__f_into ((1 : t_u32)))) (low_bit) in
    count) in
  count.

Definition impl_11__count_ones (self : hax_core.primitive.primitive_definitions.t_usize) : hax_core.primitive.primitive_definitions.t_u32 :=
  rust_primitives.hax.control_flow_monad.mexception.run (let hoist26 := core.ops.control_flow.ControlFlow_Break (ctpop_usize (self)) in
  core.ops.control_flow.ControlFlow_Continue (rust_primitives.hax.never_to_any (hoist26))).

Definition impl_11__count_zeros (self : hax_core.primitive.primitive_definitions.t_usize) : hax_core.primitive.primitive_definitions.t_u32 :=
  impl_11__count_ones (core.ops.bit.Not__f_not (self)).

Definition impl_11__leading_zeros (self : hax_core.primitive.primitive_definitions.t_usize) : hax_core.primitive.primitive_definitions.t_u32 :=
  rust_primitives.hax.control_flow_monad.mexception.run (let hoist27 := core.ops.control_flow.ControlFlow_Break (ctlz_usize (self)) in
  core.ops.control_flow.ControlFlow_Continue (rust_primitives.hax.never_to_any (hoist27))).

Definition impl_11__trailing_zeros (self : hax_core.primitive.primitive_definitions.t_usize) : hax_core.primitive.primitive_definitions.t_u32 :=
  rust_primitives.hax.control_flow_monad.mexception.run (let hoist28 := core.ops.control_flow.ControlFlow_Break (cttz_usize (self)) in
  core.ops.control_flow.ControlFlow_Continue (rust_primitives.hax.never_to_any (hoist28))).

Definition impl_11__leading_ones (self : hax_core.primitive.primitive_definitions.t_usize) : hax_core.primitive.primitive_definitions.t_u32 :=
  impl_11__leading_zeros (core.ops.bit.Not__f_not (self)).

Definition impl_11__trailing_ones (self : hax_core.primitive.primitive_definitions.t_usize) : hax_core.primitive.primitive_definitions.t_u32 :=
  impl_11__trailing_zeros (core.ops.bit.Not__f_not (self)).

Definition impl_11__rotate_left (self : hax_core.primitive.primitive_definitions.t_usize) (n : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_usize :=
  rust_primitives.hax.control_flow_monad.mexception.run (let hoist29 := core.ops.control_flow.ControlFlow_Break (rotate_left_usize (self) (n)) in
  core.ops.control_flow.ControlFlow_Continue (rust_primitives.hax.never_to_any (hoist29))).

Definition impl_11__rotate_right (self : hax_core.primitive.primitive_definitions.t_usize) (n : hax_core.primitive.primitive_definitions.t_u32) : hax_core.primitive.primitive_definitions.t_usize :=
  rust_primitives.hax.control_flow_monad.mexception.run (let hoist30 := core.ops.control_flow.ControlFlow_Break (rotate_right_usize (self) (n)) in
  core.ops.control_flow.ControlFlow_Continue (rust_primitives.hax.never_to_any (hoist30))).

Definition impl_11__swap_bytes (self : hax_core.primitive.primitive_definitions.t_usize) : hax_core.primitive.primitive_definitions.t_usize :=
  core.convert.Into__f_into (bswap_usize (self)).

Definition impl_11__from_be (x : hax_core.primitive.primitive_definitions.t_usize) : hax_core.primitive.primitive_definitions.t_usize :=
  impl_11__swap_bytes (x).

Definition impl_11__from_le (x : hax_core.primitive.primitive_definitions.t_usize) : hax_core.primitive.primitive_definitions.t_usize :=
  x.

Definition impl_11__to_be (self : hax_core.primitive.primitive_definitions.t_usize) : hax_core.primitive.primitive_definitions.t_usize :=
  impl_11__swap_bytes (self).

Definition impl_11__to_le (self : hax_core.primitive.primitive_definitions.t_usize) : hax_core.primitive.primitive_definitions.t_usize :=
  self.

Definition impl_11__checked_add (self : hax_core.primitive.primitive_definitions.t_usize) (rhs : hax_core.primitive.primitive_definitions.t_usize) : core.option.t_Option ((hax_core.primitive.primitive_definitions.t_usize)) :=
  core.option.Option_Some (unchecked_add_usize (self) (rhs)).

Definition impl_11__checked_div (self : hax_core.primitive.primitive_definitions.t_usize) (rhs : hax_core.primitive.primitive_definitions.t_usize) : core.option.t_Option ((hax_core.primitive.primitive_definitions.t_usize)) :=
  if
    core.cmp.PartialEq__f_eq (rhs) (core.convert.Into__f_into ((0 : t_usize)))
  then
    core.option.Option_None
  else
    core.option.Option_Some (unchecked_div_usize (self) (rhs)).

Definition impl_11__wrapping_add (self : hax_core.primitive.primitive_definitions.t_usize) (rhs : hax_core.primitive.primitive_definitions.t_usize) : hax_core.primitive.primitive_definitions.t_usize :=
  wrapping_add_usize (self) (rhs).

Definition impl_11__wrapping_sub (self : hax_core.primitive.primitive_definitions.t_usize) (rhs : hax_core.primitive.primitive_definitions.t_usize) : hax_core.primitive.primitive_definitions.t_usize :=
  wrapping_sub_usize (self) (rhs).

Definition impl_11__wrapping_mul (self : hax_core.primitive.primitive_definitions.t_usize) (rhs : hax_core.primitive.primitive_definitions.t_usize) : hax_core.primitive.primitive_definitions.t_usize :=
  wrapping_mul_usize (self) (rhs).

Definition impl_11__wrapping_div (self : hax_core.primitive.primitive_definitions.t_usize) (rhs : hax_core.primitive.primitive_definitions.t_usize) : hax_core.primitive.primitive_definitions.t_usize :=
  core.ops.arith.Div__f_div (self) (rhs).

Definition impl_11__wrapping_div_euclid (self : hax_core.primitive.primitive_definitions.t_usize) (rhs : hax_core.primitive.primitive_definitions.t_usize) : hax_core.primitive.primitive_definitions.t_usize :=
  core.ops.arith.Div__f_div (self) (rhs).

Definition impl_11__wrapping_rem (self : hax_core.primitive.primitive_definitions.t_usize) (rhs : hax_core.primitive.primitive_definitions.t_usize) : hax_core.primitive.primitive_definitions.t_usize :=
  core.ops.arith.Rem__f_rem (self) (rhs).

Definition impl_11__wrapping_rem_euclid (self : hax_core.primitive.primitive_definitions.t_usize) (rhs : hax_core.primitive.primitive_definitions.t_usize) : hax_core.primitive.primitive_definitions.t_usize :=
  core.ops.arith.Rem__f_rem (self) (rhs).

Definition impl_11__wrapping_neg (self : hax_core.primitive.primitive_definitions.t_usize) : hax_core.primitive.primitive_definitions.t_usize :=
  impl_11__wrapping_sub (hax_core.primitive.primitive_definitions.Build_t__usize_usize (hax_core.base_interface.int.Constants__f_ZERO)) (self).

Definition impl_11__overflowing_add (self : hax_core.primitive.primitive_definitions.t_usize) (rhs : hax_core.primitive.primitive_definitions.t_usize) : (hax_core.primitive.primitive_definitions.t_usize*bool) :=
  add_with_overflow_usize (self) (rhs).
