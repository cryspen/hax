(* File automatically generated by Hacspec *)
From Coq Require Import ZArith.
Require Import List.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.
Require Import Ascii.
Require Import String.
Require Import Coq.Floats.Floats.
From RecordUpdate Require Import RecordSet.
Import RecordSetNotations.
From Core Require Import Core_Base_Spec_Haxint.

(* NotImplementedYet *)







Definition v_WORDSIZE_4_ : Core_Base_Spec_Haxint.t_HaxInt :=
  Core_Base_Spec_Haxint.HaxInt_HaxInt (Alloc_Borrow.Cow_Borrowed (Rust_primitives.unsize ([(128 : t_u8)]))).

Definition v_WORDSIZE_8_ : Core_Base_Spec_Haxint.t_HaxInt :=
  Core_Base_Spec_Haxint.HaxInt_HaxInt (Alloc_Borrow.Cow_Borrowed (Rust_primitives.unsize ([(0 : t_u8); (1 : t_u8)]))).

Definition v_WORDSIZE_16_ : Core_Base_Spec_Haxint.t_HaxInt :=
  Core_Base_Spec_Haxint.HaxInt_HaxInt (Alloc_Borrow.Cow_Borrowed (Rust_primitives.unsize ([(0 : t_u8); (0 : t_u8); (1 : t_u8)]))).

Definition v_WORDSIZE_32_ : Core_Base_Spec_Haxint.t_HaxInt :=
  Core_Base_Spec_Haxint.HaxInt_HaxInt (Alloc_Borrow.Cow_Borrowed (Rust_primitives.unsize ([(0 : t_u8); (0 : t_u8); (0 : t_u8); (0 : t_u8); (1 : t_u8)]))).

Definition v_WORDSIZE_64_ : Core_Base_Spec_Haxint.t_HaxInt :=
  Core_Base_Spec_Haxint.HaxInt_HaxInt (Alloc_Borrow.Cow_Borrowed (Rust_primitives.unsize ([(0 : t_u8); (0 : t_u8); (0 : t_u8); (0 : t_u8); (0 : t_u8); (0 : t_u8); (0 : t_u8); (0 : t_u8); (1 : t_u8)]))).

Definition v_WORDSIZE_128_ : Core_Base_Spec_Haxint.t_HaxInt :=
  Core_Base_Spec_Haxint.HaxInt_HaxInt (Alloc_Borrow.Cow_Borrowed (Rust_primitives.unsize ([(0 : t_u8); (0 : t_u8); (0 : t_u8); (0 : t_u8); (0 : t_u8); (0 : t_u8); (0 : t_u8); (0 : t_u8); (0 : t_u8); (0 : t_u8); (0 : t_u8); (0 : t_u8); (0 : t_u8); (0 : t_u8); (0 : t_u8); (0 : t_u8); (1 : t_u8)]))).

Definition v_WORDSIZE_4_SUB_1_ : Core_Base_Spec_Haxint.t_HaxInt :=
  Core_Base_Spec_Haxint.HaxInt_HaxInt (Alloc_Borrow.Cow_Borrowed (Rust_primitives.unsize ([(127 : t_u8)]))).

Definition v_WORDSIZE_8_SUB_1_ : Core_Base_Spec_Haxint.t_HaxInt :=
  Core_Base_Spec_Haxint.HaxInt_HaxInt (Alloc_Borrow.Cow_Borrowed (Rust_primitives.unsize ([(255 : t_u8)]))).

Definition v_WORDSIZE_16_SUB_1_ : Core_Base_Spec_Haxint.t_HaxInt :=
  Core_Base_Spec_Haxint.HaxInt_HaxInt (Alloc_Borrow.Cow_Borrowed (Rust_primitives.unsize ([(255 : t_u8); (255 : t_u8)]))).

Definition v_WORDSIZE_32_SUB_1_ : Core_Base_Spec_Haxint.t_HaxInt :=
  Core_Base_Spec_Haxint.HaxInt_HaxInt (Alloc_Borrow.Cow_Borrowed (Rust_primitives.unsize ([(255 : t_u8); (255 : t_u8); (255 : t_u8); (255 : t_u8)]))).

Definition v_WORDSIZE_64_SUB_1_ : Core_Base_Spec_Haxint.t_HaxInt :=
  Core_Base_Spec_Haxint.HaxInt_HaxInt (Alloc_Borrow.Cow_Borrowed (Rust_primitives.unsize ([(255 : t_u8); (255 : t_u8); (255 : t_u8); (255 : t_u8); (255 : t_u8); (255 : t_u8); (255 : t_u8); (255 : t_u8)]))).

Definition v_WORDSIZE_128_SUB_1_ : Core_Base_Spec_Haxint.t_HaxInt :=
  Core_Base_Spec_Haxint.HaxInt_HaxInt (Alloc_Borrow.Cow_Borrowed (Rust_primitives.unsize ([(255 : t_u8); (255 : t_u8); (255 : t_u8); (255 : t_u8); (255 : t_u8); (255 : t_u8); (255 : t_u8); (255 : t_u8); (255 : t_u8); (255 : t_u8); (255 : t_u8); (255 : t_u8); (255 : t_u8); (255 : t_u8); (255 : t_u8); (255 : t_u8)]))).

Definition v_BITS_8_ : Core_Base_Spec_Haxint.t_HaxInt :=
  Core_Base_Spec_Haxint.HaxInt_HaxInt (Alloc_Borrow.Cow_Borrowed (Rust_primitives.unsize ([(8 : t_u8)]))).

Definition v_BITS_16_ : Core_Base_Spec_Haxint.t_HaxInt :=
  Core_Base_Spec_Haxint.HaxInt_HaxInt (Alloc_Borrow.Cow_Borrowed (Rust_primitives.unsize ([(16 : t_u8)]))).

Definition v_BITS_32_ : Core_Base_Spec_Haxint.t_HaxInt :=
  Core_Base_Spec_Haxint.HaxInt_HaxInt (Alloc_Borrow.Cow_Borrowed (Rust_primitives.unsize ([(32 : t_u8)]))).

Definition v_BITS_64_ : Core_Base_Spec_Haxint.t_HaxInt :=
  Core_Base_Spec_Haxint.HaxInt_HaxInt (Alloc_Borrow.Cow_Borrowed (Rust_primitives.unsize ([(64 : t_u8)]))).

Definition v_BITS_128_ : Core_Base_Spec_Haxint.t_HaxInt :=
  Core_Base_Spec_Haxint.HaxInt_HaxInt (Alloc_Borrow.Cow_Borrowed (Rust_primitives.unsize ([(128 : t_u8)]))).

Definition v_NEG_WORDSIZE_8_ : Core_Base_Spec_Z.t_Z :=
  Core_Base_Spec_Z.Z_NEG (Core_Base_Spec_Binary_Positive.Positive_Positive (v_WORDSIZE_4_)).

Definition v_NEG_WORDSIZE_16_ : Core_Base_Spec_Z.t_Z :=
  Core_Base_Spec_Z.Z_NEG (Core_Base_Spec_Binary_Positive.Positive_Positive (v_WORDSIZE_8_)).

Definition v_NEG_WORDSIZE_32_ : Core_Base_Spec_Z.t_Z :=
  Core_Base_Spec_Z.Z_NEG (Core_Base_Spec_Binary_Positive.Positive_Positive (v_WORDSIZE_16_)).

Definition v_NEG_WORDSIZE_64_ : Core_Base_Spec_Z.t_Z :=
  Core_Base_Spec_Z.Z_NEG (Core_Base_Spec_Binary_Positive.Positive_Positive (v_WORDSIZE_32_)).

Definition v_NEG_WORDSIZE_128_ : Core_Base_Spec_Z.t_Z :=
  Core_Base_Spec_Z.Z_NEG (Core_Base_Spec_Binary_Positive.Positive_Positive (v_WORDSIZE_64_)).

Definition v_POS_WORDSIZE_8_ : Core_Base_Spec_Z.t_Z :=
  Core_Base_Spec_Z.Z_POS (Core_Base_Spec_Binary_Positive.Positive_Positive (v_WORDSIZE_4_SUB_1_)).

Definition v_POS_WORDSIZE_16_ : Core_Base_Spec_Z.t_Z :=
  Core_Base_Spec_Z.Z_POS (Core_Base_Spec_Binary_Positive.Positive_Positive (v_WORDSIZE_8_SUB_1_)).

Definition v_POS_WORDSIZE_32_ : Core_Base_Spec_Z.t_Z :=
  Core_Base_Spec_Z.Z_POS (Core_Base_Spec_Binary_Positive.Positive_Positive (v_WORDSIZE_16_SUB_1_)).

Definition v_POS_WORDSIZE_64_ : Core_Base_Spec_Z.t_Z :=
  Core_Base_Spec_Z.Z_POS (Core_Base_Spec_Binary_Positive.Positive_Positive (v_WORDSIZE_32_SUB_1_)).

Definition v_POS_WORDSIZE_128_ : Core_Base_Spec_Z.t_Z :=
  Core_Base_Spec_Z.Z_POS (Core_Base_Spec_Binary_Positive.Positive_Positive (v_WORDSIZE_64_SUB_1_)).
