(*****************************************)
(* Preamble *)
(*****************************************)

channel c.

fun construct_fail() : bitstring
reduc construct_fail() = fail.

type Option.
fun Some(bitstring): Option [data].
fun None(): Option [data].
letfun Option_err() = let x = construct_fail() in None().

const empty: bitstring.
letfun bitstring_default() = empty.
letfun bitstring_err() = let x = construct_fail() in bitstring_default().

letfun nat_default() = 0.
fun nat_to_bitstring(nat): bitstring.
letfun nat_err() = let x = construct_fail() in nat_default().

letfun bool_default() = false.


(*****************************************)
(* Types and Constructors *)
(*****************************************)



(*****************************************)
(* Functions *)
(*****************************************)

letfun tests__legacy__assert__asserts(wildcard5 : bitstring) =
       let wildcard4: bitstring = (
         if core__ops__bit__f_not(true) then (bitstring_err()) else (())
       ) in
       let wildcard3: bitstring = (
         if core__ops__bit__f_not(core__cmp__f_eq(1, 1))
         then (bitstring_err())
         else (())
       ) in
       let wildcard2: bitstring = (
         let (left_val: nat, right_val: nat) = (2, 2) in (
           if core__ops__bit__f_not(core__cmp__f_eq(left_val, right_val))
           then
             (let kind = (core__panicking__AssertKind_Eq()) in
              bitstring_err())
           else (())
         )
       ) in
       let wildcard1: bitstring = (
         let (left_val: nat, right_val: nat) = (1, 2) in (
           if core__cmp__f_eq(left_val, right_val)
           then
             (let kind = (core__panicking__AssertKind_Ne()) in
              bitstring_err())
           else (())
         )
       ) in
       ().

