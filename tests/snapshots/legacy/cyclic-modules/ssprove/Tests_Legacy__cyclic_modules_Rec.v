(* File automatically generated by Hacspec *)
Set Warnings "-notation-overridden,-ambiguous-paths".
From Crypt Require Import choice_type Package Prelude.
Import PackageNotation.
From extructures Require Import ord fset.
From mathcomp Require Import word_ssrZ word.
(* From Jasmin Require Import word. *)

From Coq Require Import ZArith.
From Coq Require Import Strings.String.
Import List.ListNotations.
Open Scope list_scope.
Open Scope Z_scope.
Open Scope bool_scope.

From Hacspec Require Import ChoiceEquality.
From Hacspec Require Import LocationUtility.
From Hacspec Require Import Hacspec_Lib_Comparable.
From Hacspec Require Import Hacspec_Lib_Pre.
From Hacspec Require Import Hacspec_Lib.

Open Scope hacspec_scope.
Import choice.Choice.Exports.

From RecordUpdate Require Import RecordUpdate.

Import RecordSetNotations.

Obligation Tactic := (* try timeout 8 *) solve_ssprove_obligations.

(*Not implemented yet? todo(item)*)

Definition t_T : choice_type :=
  ('unit ∐ 'unit).
Notation "'T_t1_case'" := (inl tt) (at level 100).
Equations T_t1 : both t_T :=
  T_t1  :=
    ret_both (inl (tt : 'unit) : t_T) : both t_T.
Fail Next Obligation.
Notation "'T_t2_case'" := (inr tt) (at level 100).
Equations T_t2 : both t_T :=
  T_t2  :=
    ret_both (inr (tt : 'unit) : t_T) : both t_T.
Fail Next Obligation.

Equations t_T_cast_to_repr (x : both t_T) : both uint_size :=
  t_T_cast_to_repr x  :=
    matchb x with
    | T_t1_case  =>
      ret_both (0 : uint_size)
    | T_t2_case  =>
      ret_both (1 : uint_size)
    end : both uint_size.
Fail Next Obligation.

Equations hf (x : both t_T) : both t_T :=
  hf x  :=
    matchb x with
    | T_t1_case  =>
      hf T_t2
    | T_t2_case  =>
      x
    end : both t_T.
Fail Next Obligation.

Equations g2 (x : both t_T) : both t_T :=
  g2 x  :=
    matchb x with
    | T_t1_case  =>
      g1 x
    | T_t2_case  =>
      hf x
    end : both t_T.
Fail Next Obligation.

Equations g1 (x : both t_T) : both t_T :=
  g1 x  :=
    matchb x with
    | T_t1_case  =>
      g2 x
    | T_t2_case  =>
      T_t1
    end : both t_T.
Fail Next Obligation.
