(* File automatically generated by Hacspec *)
Set Warnings "-notation-overridden,-ambiguous-paths".
From Crypt Require Import choice_type Package Prelude.
Import PackageNotation.
From extructures Require Import ord fset.
From mathcomp Require Import word_ssrZ word.
(* From Jasmin Require Import word. *)

From Coq Require Import ZArith.
From Coq Require Import Strings.String.
Import List.ListNotations.
Open Scope list_scope.
Open Scope Z_scope.
Open Scope bool_scope.

From Hacspec Require Import ChoiceEquality.
From Hacspec Require Import LocationUtility.
From Hacspec Require Import Hacspec_Lib_Comparable.
From Hacspec Require Import Hacspec_Lib_Pre.
From Hacspec Require Import Hacspec_Lib.

Open Scope hacspec_scope.
Import choice.Choice.Exports.

From RecordUpdate Require Import RecordUpdate.

Import RecordSetNotations.

Obligation Tactic := (* try timeout 8 *) solve_ssprove_obligations.

(*Not implemented yet? todo(item)*)

Equations v_VERSION : both (seq int8) :=
  v_VERSION  :=
    unsize (array_from_list [ret_both (118 : int8);
      ret_both (49 : int8)]) : both (seq int8).
Fail Next Obligation.

Equations do_something (_ : both (seq int8)) : both 'unit :=
  do_something _  :=
    ret_both (tt : 'unit) : both 'unit.
Fail Next Obligation.

Equations r#unsized (_ : both (nseq (seq int8) 1)) : both 'unit :=
  r#unsized _  :=
    ret_both (tt : 'unit) : both 'unit.
Fail Next Obligation.

Equations sized (x : both (nseq (nseq int8 4) 1)) : both 'unit :=
  sized x  :=
    r#unsized (array_from_list [unsize (x.a[(ret_both (0 : uint_size))])]) : both 'unit.
Fail Next Obligation.
