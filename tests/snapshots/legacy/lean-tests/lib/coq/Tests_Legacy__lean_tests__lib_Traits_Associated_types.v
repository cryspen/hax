(* File automatically generated by Hacspec *)
From Coq Require Import ZArith.
Require Import List.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.
Require Import Ascii.
Require Import String.
Require Import Coq.Floats.Floats.
From RecordUpdate Require Import RecordSet.
Import RecordSetNotations.
From Core Require Import Core.

(* NotImplementedYet *)

Class t_Foo (v_Self : Type) (v_T : Type) : Type :=
  {
  }.
Arguments t_Foo (_) (_).

Class t_Bar (v_Self : Type) : Type :=
  {
  }.
Arguments t_Bar (_).

Record S_record : Type :=
  {
  }.

#[export]
Notation "'S_S_record'" := Build_S_record.

Instance t_Bar_1041747046 : t_Bar ((t_i16)) :=
  {
  }.

Instance t_Foo_734938404 `{v_A : Type} : t_Foo (((t_u32*v_A))) ((t_i16)) :=
  {
  }.

Class t_T1 (v_Self : Type) : Type :=
  {
    f_T : Type;
    f_f : v_Self -> f_T -> f_T;
  }.
Arguments t_T1 (_).

Class t_T3 (v_Self : Type) : Type :=
  {
    f_T : Type;
    _ :: `{t_Bar (f_T)};
    f_Tp v_A : Type `{t_Foo (f_Tp) (f_T)} : Type;
    f_f v_A : Type `{t_Bar (v_A)} : v_Self -> f_T -> f_Tp -> t_usize;
  }.
Arguments t_T3 (_).

Instance t_T1_208181362 : t_T1 ((t_S)) :=
  {
    implaabbcc_t_T1_f_T := t_i32;
    implaabbcc_t_T1_f_f := fun  (self : t_S) (x : t_i32)=>
      (2121 : t_i32);
  }.

Class t_T2 (v_Self : Type) : Type :=
  {
    f_T : Type;
    _ :: `{t_T1 (f_T)};
    f_f : v_Self -> f_T -> t_usize;
  }.
Arguments t_T2 (_).

Instance t_T2_416948713 : t_T2 ((t_S)) :=
  {
    implaabbcc_t_T2_f_T := t_S;
    implaabbcc_t_T2_f_f := fun  (self : t_S) (x : t_S)=>
      (21 : t_usize);
  }.
