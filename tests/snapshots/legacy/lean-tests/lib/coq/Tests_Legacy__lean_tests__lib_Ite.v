(* File automatically generated by Hacspec *)
From Coq Require Import ZArith.
Require Import List.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.
Require Import Ascii.
Require Import String.
Require Import Coq.Floats.Floats.
From RecordUpdate Require Import RecordSet.
Import RecordSetNotations.
From Core Require Import Core.

(* NotImplementedYet *)

Definition test1 '(_ : unit) : t_i32 :=
  let x := if
    (true : bool)
  then
    (0 : t_i32)
  else
    (1 : t_i32) in
  if
    (false : bool)
  then
    (2 : t_i32)
  else
    (3 : t_i32).

Definition test2 (b : bool) : t_i32 :=
  let x := f_add ((1 : t_i32)) (if
    (true : bool)
  then
    (0 : t_i32)
  else
    (1 : t_i32)) in
  let y := (0 : t_i32) in
  let y := if
    (true : bool)
  then
    f_add (f_add (y) (x)) ((1 : t_i32))
  else
    f_sub (f_sub (y) (x)) ((1 : t_i32)) in
  if
    b
  then
    let z := f_add (y) (y) in
    f_add (f_add (z) (y)) (x)
  else
    let z := f_sub (y) (x) in
    f_add (f_add (z) (y)) (x).
