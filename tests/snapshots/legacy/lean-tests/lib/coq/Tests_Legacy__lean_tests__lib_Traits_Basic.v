(* File automatically generated by Hacspec *)
From Coq Require Import ZArith.
Require Import List.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.
Require Import Ascii.
Require Import String.
Require Import Coq.Floats.Floats.
From RecordUpdate Require Import RecordSet.
Import RecordSetNotations.
From Core Require Import Core.

(* NotImplementedYet *)

Class t_T1 (v_Self : Type) : Type :=
  {
    f_f1 : v_Self -> t_usize;
    f_f2 : v_Self -> v_Self -> t_usize;
  }.
Arguments t_T1 (_).

Record S_record : Type :=
  {
  }.

#[export]
Notation "'S_S_record'" := Build_S_record.

Instance t_T1_119949170 : t_T1 ((t_S)) :=
  {
    implaabbcc_t_T1_f_f1 := fun  (self : t_S)=>
      (42 : t_usize);
    implaabbcc_t_T1_f_f2 := fun  (self : t_S) (other : t_S)=>
      (43 : t_usize);
  }.

Definition f `{v_T : Type} `{t_T1 (v_T)} (x : v_T) : t_usize :=
  f_add (f_f1 (x)) (f_f2 (x) (x)).
