(* File automatically generated by Hacspec *)
From Coq Require Import ZArith.
Require Import List.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.
Require Import Ascii.
Require Import String.
Require Import Coq.Floats.Floats.
From RecordUpdate Require Import RecordSet.
Import RecordSetNotations.
From Core Require Import Core.

(* NotImplementedYet *)

Class t_T1 (v_Self : Type) : Type :=
  {
    f_f1 : v_Self -> t_usize;
  }.
Arguments t_T1 (_).

Class t_T2 (v_Self : Type) : Type :=
  {
    f_f2 : v_Self -> t_usize;
  }.
Arguments t_T2 (_).

Class t_T3 (v_Self : Type) `{t_T2 (v_Self)} `{t_T1 (v_Self)} : Type :=
  {
    f_f3 : v_Self -> t_usize;
  }.
Arguments t_T3 (_) {_} {_}.

Class t_Tp1 (v_Self : Type) : Type :=
  {
    f_f1 : v_Self -> t_usize;
  }.
Arguments t_Tp1 (_).

Class t_Tp2 (v_Self : Type) `{t_Tp1 (v_Self)} `{t_T3 (v_Self)} : Type :=
  {
    f_fp2 : v_Self -> t_usize;
  }.
Arguments t_Tp2 (_) {_} {_}.

Record S_record : Type :=
  {
  }.

#[export]
Notation "'S_S_record'" := Build_S_record.

Instance t_T1_751050236 : t_T1 ((t_S)) :=
  {
    implaabbcc_t_T1_f_f1 := fun  (self : t_S)=>
      (1 : t_usize);
  }.

Instance t_T2_207245124 : t_T2 ((t_S)) :=
  {
    implaabbcc_t_T2_f_f2 := fun  (self : t_S)=>
      (2 : t_usize);
  }.

Instance t_T3_248186522 : t_T3 ((t_S)) :=
  {
    implaabbcc_t_T3_f_f3 := fun  (self : t_S)=>
      (3 : t_usize);
  }.

Instance t_Tp1_986187039 : t_Tp1 ((t_S)) :=
  {
    implaabbcc_t_Tp1_f_f1 := fun  (self : t_S)=>
      (10 : t_usize);
  }.

Instance t_Tp2_138998569 : t_Tp2 ((t_S)) :=
  {
    implaabbcc_t_Tp2_f_fp2 := fun  (self : t_S)=>
      f_add (f_add (f_add (f_f1 (self)) (f_f1 (self))) (f_f2 (self))) (f_f3 (self));
  }.

Definition test '(_ : unit) : t_usize :=
  let s := S in
  f_add (f_f3 (s)) ((1 : t_usize)).
