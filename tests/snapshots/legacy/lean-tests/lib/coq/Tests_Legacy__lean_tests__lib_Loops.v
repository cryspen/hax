(* File automatically generated by Hacspec *)
From Coq Require Import ZArith.
Require Import List.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.
Require Import Ascii.
Require Import String.
Require Import Coq.Floats.Floats.
From RecordUpdate Require Import RecordSet.
Import RecordSetNotations.
From Core Require Import Core.

(* NotImplementedYet *)

Definition loop1 '(_ : unit) : t_u32 :=
  let x : t_u32 := (0 : t_u32) in
  let x := fold_range ((1 : t_u32)) ((10 : t_u32)) (fun x _ =>
    (true : bool)) (x) (fun x i =>
    f_add (x) (i)) in
  x.

Definition loop2 '(_ : unit) : t_u32 :=
  let x : t_u32 := (0 : t_u32) in
  let x := fold_range ((1 : t_u32)) ((10 : t_u32)) (fun x _ =>
    (true : bool)) (x) (fun x i =>
    let _ := if
      f_eq (i) ((5 : t_u32))
    then
      let hoist1 := ControlFlow_Break (x) in
      ControlFlow_Continue (never_to_any (hoist1))
    else
      ControlFlow_Continue (tt) in
    ControlFlow_Continue (let x := f_add (x) (i) in
    x)) in
  x.
