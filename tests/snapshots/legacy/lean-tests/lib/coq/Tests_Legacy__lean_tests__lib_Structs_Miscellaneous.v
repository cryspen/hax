(* File automatically generated by Hacspec *)
From Coq Require Import ZArith.
Require Import List.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.
Require Import Ascii.
Require Import String.
Require Import Coq.Floats.Floats.
From RecordUpdate Require Import RecordSet.
Import RecordSetNotations.
From Core Require Import Core.

(* NotImplementedYet *)

Record S_record : Type :=
  {
    S_f_f : t_i32;
  }.


#[export] Instance settable_S_record : Settable _ :=
  settable! (Build_S_record) <S_f_f>.

Definition test_tuples '(_ : unit) : (t_i32*t_i32) :=
  let lit := (1 : t_i32) in
  let constr := S ((42 : t_i32)) in
  let proj := f_f constr in
  let ite := if
    (true : bool)
  then
    ((1 : t_i32),(2 : t_i32))
  else
    let z := f_add ((1 : t_i32)) ((2 : t_i32)) in
    (z,z) in
  ((1 : t_i32),(2 : t_i32)).
