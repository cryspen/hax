(* File automatically generated by Hacspec *)
Set Warnings "-notation-overridden,-ambiguous-paths".
From Crypt Require Import choice_type Package Prelude.
Import PackageNotation.
From extructures Require Import ord fset.
From mathcomp Require Import word_ssrZ word.
(* From Jasmin Require Import word. *)

From Coq Require Import ZArith.
From Coq Require Import Strings.String.
Import List.ListNotations.
Open Scope list_scope.
Open Scope Z_scope.
Open Scope bool_scope.

From Hacspec Require Import ChoiceEquality.
From Hacspec Require Import LocationUtility.
From Hacspec Require Import Hacspec_Lib_Comparable.
From Hacspec Require Import Hacspec_Lib_Pre.
From Hacspec Require Import Hacspec_Lib.

Open Scope hacspec_scope.
Import choice.Choice.Exports.

From RecordUpdate Require Import RecordUpdate.

Import RecordSetNotations.

Obligation Tactic := (* try timeout 8 *) solve_ssprove_obligations.

(*Not implemented yet? todo(item)*)

(*item error backend*)

(*Not implemented yet? todo(item)*)

Equations f (_ : both 'unit) : both 'unit :=
  f _  :=
    letb a_1_ := ret_both (104 : int32) in
    letb a_2_ := ret_both (205 : int32) in
    letb a_3_ := ret_both (306 : int32) in
    letb a := ret_both (123 : int32) in
    letb _ := debug (ret_both (3 : int32)) a_3_ in
    letb _ := debug (ret_both (2 : int32)) a_2_ in
    letb _ := debug (ret_both (1 : int32)) a_1_ in
    debug (ret_both (4 : int32)) a : both 'unit.
Fail Next Obligation.

Equations ff_expand (_ : both 'unit) : both 'unit :=
  ff_expand _  :=
    letb a := ret_both (104 : int32) in
    letb a := ret_both (205 : int32) in
    letb a := ret_both (306 : int32) in
    letb a := ret_both (123 : int32) in
    letb _ := debug (ret_both (3 : int32)) a in
    letb _ := debug (ret_both (2 : int32)) a in
    letb _ := debug (ret_both (1 : int32)) a in
    debug (ret_both (0 : int32)) a : both 'unit.
Fail Next Obligation.
