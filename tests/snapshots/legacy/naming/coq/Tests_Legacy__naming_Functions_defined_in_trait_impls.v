(* File automatically generated by Hacspec *)
From Coq Require Import ZArith.
Require Import List.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.
Require Import Ascii.
Require Import String.
Require Import Coq.Floats.Floats.
From RecordUpdate Require Import RecordSet.
Import RecordSetNotations.
From Core Require Import Core.

(* NotImplementedYet *)

Record A_record : Type :=
  {
  }.

#[export]
Notation "'A_A_record'" := Build_A_record.

Definition f_eq__impl__panic_cold_explicit '(_ : unit) : t_Never :=
  panic_explicit (tt).

Instance t_PartialEq_98502339 : t_PartialEq ((t_A)) ((t_A)) :=
  {
    implaabbcc_t_PartialEq_f_eq := fun  (self : t_A) (other : t_A)=>
      never_to_any (f_eq__impl__panic_cold_explicit (tt));
  }.

Record B_record : Type :=
  {
  }.

#[export]
Notation "'B_B_record'" := Build_B_record.

Definition f_eq__impl_1__panic_cold_explicit '(_ : unit) : t_Never :=
  panic_explicit (tt).

Instance t_PartialEq_981674274 : t_PartialEq ((t_B)) ((t_B)) :=
  {
    implaabbcc_t_PartialEq_f_eq := fun  (self : t_B) (other : t_B)=>
      never_to_any (f_eq__impl_1__panic_cold_explicit (tt));
  }.
