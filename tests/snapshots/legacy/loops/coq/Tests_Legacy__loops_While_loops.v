(* File automatically generated by Hacspec *)
From Coq Require Import ZArith.
Require Import List.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.
Require Import Ascii.
Require Import String.
Require Import Coq.Floats.Floats.
From RecordUpdate Require Import RecordSet.
Import RecordSetNotations.
From Core Require Import Core.

(* NotImplementedYet *)

Definition f '(_ : unit) : t_u8 :=
  let x := (0 : t_u8) in
  let x := failure (("something is not implemented yet.This is discussed in issue https://github.com/hacspec/hax/issues/933.
Please upvote or comment this issue if you see this error message.
Unhandled loop kind

This is discussed in issue https://github.com/hacspec/hax/issues/933.
Please upvote or comment this issue if you see this error message.
Note: the error was labeled with context `FunctionalizeLoops`.
"%string : string)) (("{
 (loop {
 |x| {
 (if core::cmp::f_lt(x, 10) {
 {
 let x: int = { core::ops::arith::f_add(x, 3) };
 x
 }
 } else {
 {
 let hoist1: int = {
 rust_primitives::hax::failure(
 "something is not implement..."%string : string)) in
  f_add (x) ((12 : t_u8)).

Definition while_invariant_decr '(_ : unit) : t_u8 :=
  let x := (0 : t_u8) in
  let x := failure (("something is not implemented yet.This is discussed in issue https://github.com/hacspec/hax/issues/933.
Please upvote or comment this issue if you see this error message.
Unhandled loop kind

This is discussed in issue https://github.com/hacspec/hax/issues/933.
Please upvote or comment this issue if you see this error message.
Note: the error was labeled with context `FunctionalizeLoops`.
"%string : string)) (("{
 (loop {
 |x| {
 (if core::cmp::f_lt(x, 10) {
 {
 let _: tuple0 = {
 hax_lib::e_internal_while_loop_invariant(
 core::convert::f_from(core::cmp::f_le(x, 10)),
 )
 };
 {
 let _: tuple0 = {
 hax_lib::..."%string : string)) in
  f_add (x) ((12 : t_u8)).



















Definition while_invariant_decr_rev '(_ : unit) : t_u8 :=
  let x := (0 : t_u8) in
  let x := failure (("something is not implemented yet.This is discussed in issue https://github.com/hacspec/hax/issues/933.
Please upvote or comment this issue if you see this error message.
Unhandled loop kind

This is discussed in issue https://github.com/hacspec/hax/issues/933.
Please upvote or comment this issue if you see this error message.
Note: the error was labeled with context `FunctionalizeLoops`.
"%string : string)) (("{
 (loop {
 |x| {
 (if core::cmp::f_lt(x, 10) {
 {
 let _: tuple0 = {
 hax_lib::e_internal_loop_decreases(
 hax_lib::int::f_to_int(core::ops::arith::f_sub(10, x)),
 )
 };
 {
 let _: tuple0 = {
 hax_li..."%string : string)) in
  f_add (x) ((12 : t_u8)).


















