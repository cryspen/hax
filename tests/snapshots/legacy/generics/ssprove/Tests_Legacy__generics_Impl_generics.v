(* File automatically generated by Hacspec *)
Set Warnings "-notation-overridden,-ambiguous-paths".
From Crypt Require Import choice_type Package Prelude.
Import PackageNotation.
From extructures Require Import ord fset.
From mathcomp Require Import word_ssrZ word.
(* From Jasmin Require Import word. *)

From Coq Require Import ZArith.
From Coq Require Import Strings.String.
Import List.ListNotations.
Open Scope list_scope.
Open Scope Z_scope.
Open Scope bool_scope.

From Hacspec Require Import ChoiceEquality.
From Hacspec Require Import LocationUtility.
From Hacspec Require Import Hacspec_Lib_Comparable.
From Hacspec Require Import Hacspec_Lib_Pre.
From Hacspec Require Import Hacspec_Lib.

Open Scope hacspec_scope.
Import choice.Choice.Exports.

From RecordUpdate Require Import RecordUpdate.

Import RecordSetNotations.

Obligation Tactic := (* try timeout 8 *) solve_ssprove_obligations.

(*Not implemented yet? todo(item)*)

Definition t_Test : choice_type :=
  'unit.
Equations Build_t_Test : both (t_Test) :=
  Build_t_Test  :=
    ret_both (tt (* Empty tuple *) : (t_Test)) : both (t_Test).
Fail Next Obligation.

Equations impl_Test__set_ciphersuites {v_S : v_S} {iimpl_995885649_ : iimpl_995885649_} `{ t_AsRef v_S chString} `{ t_IntoIterator iimpl_995885649_} (self : both t_Test) (ciphers : both iimpl_995885649_) : both (t_Result 'unit 'unit) :=
  impl_Test__set_ciphersuites self ciphers  :=
    Result_Ok (ret_both (tt : 'unit)) : both (t_Result 'unit 'unit).
Fail Next Obligation.

Equations impl_Test__set_alpn_protocols {v_S : v_S} {iimpl_995885649_ : iimpl_995885649_} `{ t_AsRef v_S chString} `{ t_IntoIterator iimpl_995885649_} (self : both t_Test) (e_protocols : both iimpl_995885649_) : both (t_Result 'unit 'unit) :=
  impl_Test__set_alpn_protocols self e_protocols  :=
    Result_Ok (ret_both (tt : 'unit)) : both (t_Result 'unit 'unit).
Fail Next Obligation.
