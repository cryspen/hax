(* File automatically generated by Hacspec *)
From Coq Require Import ZArith.
Require Import List.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.
Require Import Ascii.
Require Import String.
Require Import Coq.Floats.Floats.
From RecordUpdate Require Import RecordSet.
Import RecordSetNotations.
From Core Require Import Core.

(* NotImplementedYet *)

Record Wrapped_record : Type :=
  {
    Wrapped_0 : t_i32;
  }.


#[export] Instance settable_Wrapped_record : Settable _ :=
  settable! (Build_Wrapped_record) <Wrapped_0>.
Notation "'Wrapped_Wrapped_record'" := Build_Wrapped_record.

Instance t_Add_514317068 : t_Add ((t_Wrapped)) ((t_Wrapped)) :=
  {
    implaabbcc_t_Add_f_Output := t_Wrapped;
    implaabbcc_t_Add_f_add := fun  (self : t_Wrapped) (rhs : t_Wrapped)=>
      Wrapped (f_add (0 self) (0 rhs));
  }.

Definition test (x : t_Wrapped) (y : t_Wrapped) : t_Wrapped :=
  f_add (x) (y).
