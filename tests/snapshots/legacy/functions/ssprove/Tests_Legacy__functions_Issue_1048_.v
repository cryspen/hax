(* File automatically generated by Hacspec *)
Set Warnings "-notation-overridden,-ambiguous-paths".
From Crypt Require Import choice_type Package Prelude.
Import PackageNotation.
From extructures Require Import ord fset.
From mathcomp Require Import word_ssrZ word.
(* From Jasmin Require Import word. *)

From Coq Require Import ZArith.
From Coq Require Import Strings.String.
Import List.ListNotations.
Open Scope list_scope.
Open Scope Z_scope.
Open Scope bool_scope.

From Hacspec Require Import ChoiceEquality.
From Hacspec Require Import LocationUtility.
From Hacspec Require Import Hacspec_Lib_Comparable.
From Hacspec Require Import Hacspec_Lib_Pre.
From Hacspec Require Import Hacspec_Lib.

Open Scope hacspec_scope.
Import choice.Choice.Exports.

From RecordUpdate Require Import RecordUpdate.

Import RecordSetNotations.

Obligation Tactic := (* try timeout 8 *) solve_ssprove_obligations.

(*Not implemented yet? todo(item)*)

Definition t_CallableViaDeref : choice_type :=
  'unit.
Equations Build_t_CallableViaDeref : both (t_CallableViaDeref) :=
  Build_t_CallableViaDeref  :=
    ret_both (tt (* Empty tuple *) : (t_CallableViaDeref)) : both (t_CallableViaDeref).
Fail Next Obligation.

#[global] Program Instance t_CallableViaDeref_t_Deref : t_Deref t_CallableViaDeref :=
  let f_Target := 'bool : choice_type in
  let f_deref := fun  (self : both t_CallableViaDeref) => fun _ =>
    ret_both (true : 'bool) : both 'bool in
  {| f_Target := (@f_Target);
  f_deref := (@f_deref)|}.
Fail Next Obligation.
Hint Unfold t_CallableViaDeref_t_Deref.

Equations call_via_deref (_ : both 'unit) : both 'bool :=
  call_via_deref _  :=
    f_deref CallableViaDeref : both 'bool.
Fail Next Obligation.
