(* File automatically generated by Hacspec *)
Set Warnings "-notation-overridden,-ambiguous-paths".
From Crypt Require Import choice_type Package Prelude.
Import PackageNotation.
From extructures Require Import ord fset.
From mathcomp Require Import word_ssrZ word.
(* From Jasmin Require Import word. *)

From Coq Require Import ZArith.
From Coq Require Import Strings.String.
Import List.ListNotations.
Open Scope list_scope.
Open Scope Z_scope.
Open Scope bool_scope.

From Hacspec Require Import ChoiceEquality.
From Hacspec Require Import LocationUtility.
From Hacspec Require Import Hacspec_Lib_Comparable.
From Hacspec Require Import Hacspec_Lib_Pre.
From Hacspec Require Import Hacspec_Lib.

Open Scope hacspec_scope.
Import choice.Choice.Exports.

From RecordUpdate Require Import RecordUpdate.

Import RecordSetNotations.

Obligation Tactic := (* try timeout 8 *) solve_ssprove_obligations.

(*Not implemented yet? todo(item)*)

Definition t_Message : choice_type :=
  (int8 ∐ int8).
Notation "'Message_Ping_case' x" := (inl x) (at level 100).
Equations Message_Ping (x : both int8) : both t_Message :=
  Message_Ping x  :=
    bind_both x (fun x =>
      ret_both (inl x : t_Message)) : both t_Message.
Fail Next Obligation.
Notation "'Message_Pong_case' x" := (inr x) (at level 100).
Equations Message_Pong (x : both int8) : both t_Message :=
  Message_Pong x  :=
    bind_both x (fun x =>
      ret_both (inr x : t_Message)) : both t_Message.
Fail Next Obligation.
