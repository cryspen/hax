(* File automatically generated by Hacspec *)
From Coq Require Import ZArith.
Require Import List.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.
Require Import Ascii.
Require Import String.
Require Import Coq.Floats.Floats.
From RecordUpdate Require Import RecordSet.
Import RecordSetNotations.
From Core Require Import Core.

(* NotImplementedYet *)

Record Foo_record : Type :=
  {
    Foo_f_field_3_ : t_u8;
    Foo_f_field_4_ : t_u8;
    Foo_f_field_2_ : t_u8;
    Foo_f_field_1_ : t_u8;
  }.





#[export] Instance settable_Foo_record : Settable _ :=
  settable! (Build_Foo_record) <Foo_f_field_3_; Foo_f_field_4_; Foo_f_field_2_; Foo_f_field_1_>.

Record Bar_A_record : Type :=
  {
    Bar_A_f_a_field_3_ : t_u8;
    Bar_A_f_a_field_1_ : t_u8;
    Bar_A_f_a_field_2_ : t_u8;
  }.




#[export] Instance settable_Bar_A_record : Settable _ :=
  settable! (Build_Bar_A_record) <Bar_A_f_a_field_3_; Bar_A_f_a_field_1_; Bar_A_f_a_field_2_>.
Record Bar_B_record : Type :=
  {
    Bar_B_f_b_field_1_ : t_u8;
    Bar_B_f_b_field_3_ : t_u8;
    Bar_B_f_b_field_2_ : t_u8;
  }.




#[export] Instance settable_Bar_B_record : Settable _ :=
  settable! (Build_Bar_B_record) <Bar_B_f_b_field_1_; Bar_B_f_b_field_3_; Bar_B_f_b_field_2_>.
Inductive t_Bar : Type :=
| Bar_A : Bar_A_record  -> _
| Bar_B : Bar_B_record  -> _.


