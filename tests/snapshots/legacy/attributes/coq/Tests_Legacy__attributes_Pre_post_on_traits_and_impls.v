(* File automatically generated by Hacspec *)
From Coq Require Import ZArith.
Require Import List.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.
Require Import Ascii.
Require Import String.
Require Import Coq.Floats.Floats.
From RecordUpdate Require Import RecordSet.
Import RecordSetNotations.
From Core Require Import Core.

(* NotImplementedYet *)



Class t_Operation (v_Self : Type) : Type :=
  {
    f_double : t_u8 -> t_u8;
  }.
Arguments t_Operation (_).

Record ViaAdd_record : Type :=
  {
  }.

#[export]
Notation "'ViaAdd_ViaAdd_record'" := Build_ViaAdd_record.

Record ViaMul_record : Type :=
  {
  }.

#[export]
Notation "'ViaMul_ViaMul_record'" := Build_ViaMul_record.

Instance t_Operation_860929907 : t_Operation ((t_ViaAdd)) :=
  {
    implaabbcc_t_Operation_f_double := fun  (x : t_u8)=>
      f_add (x) (x);
  }.

Instance t_Operation_238135922 : t_Operation ((t_ViaMul)) :=
  {
    implaabbcc_t_Operation_f_double := fun  (x : t_u8)=>
      f_mul (x) ((2 : t_u8));
  }.

Class t_TraitWithRequiresAndEnsures (v_Self : Type) : Type :=
  {
    f_method : v_Self -> t_u8 -> t_u8;
  }.
Arguments t_TraitWithRequiresAndEnsures (_).

Definition test `{v_T : Type} `{t_TraitWithRequiresAndEnsures (v_T)} (x : v_T) : t_u8 :=
  f_sub (f_method (x) ((99 : t_u8))) ((88 : t_u8)).
