(* File automatically generated by Hacspec *)
From Coq Require Import ZArith.
Require Import List.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.
Require Import Ascii.
Require Import String.
Require Import Coq.Floats.Floats.
From RecordUpdate Require Import RecordSet.
Import RecordSetNotations.
From Core Require Import Core.

(* NotImplementedYet *)

Definition increment_array (v : t_Array (t_u8) ((4 : t_usize))) `{impl_Prop__from_bool ((true : bool)) = true} : t_Array (t_u8) ((4 : t_usize)) :=
  let v := update_at_usize (v) ((0 : t_usize)) (f_add (f_index (v) ((0 : t_usize))) ((1 : t_u8))) in
  let v := update_at_usize (v) ((1 : t_usize)) (f_add (f_index (v) ((1 : t_usize))) ((1 : t_u8))) in
  let v := update_at_usize (v) ((2 : t_usize)) (f_add (f_index (v) ((2 : t_usize))) ((1 : t_u8))) in
  let v := update_at_usize (v) ((3 : t_usize)) (f_add (f_index (v) ((3 : t_usize))) ((1 : t_u8))) in
  v.
Lemma increment_array_ensures (v : t_Array (t_u8) ((4 : t_usize))) :
  forall (H_requires : impl_Prop__from_bool ((true : bool)) = true),
  let vv_future := @increment_array (v : t_Array (t_u8) ((4 : t_usize))) H_requires in
  let future_v := vv_future in
  impl_Prop__from_bool ((true : bool)) = true.
Proof. Admitted.
