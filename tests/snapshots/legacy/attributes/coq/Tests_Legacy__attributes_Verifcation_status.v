(* File automatically generated by Hacspec *)
From Coq Require Import ZArith.
Require Import List.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.
Require Import Ascii.
Require Import String.
Require Import Coq.Floats.Floats.
From RecordUpdate Require Import RecordSet.
Import RecordSetNotations.
From Core Require Import Core.

(* NotImplementedYet *)

(Fatal error: something we considered as impossible occurred! Please report this by submitting an issue on GitHub!
Details: Could not find item with UID (Attr_payloads.UId.T.UId "218c02d3a7f74c909d78205ce5b5aa0e")


Note: the error was labeled with context `Coq backend`.
(* ERROR_ITEM *))
Definition a_panicfree_function '(_ : unit) : t_u8 :=
  let a := (3 : t_u8) in
  let b := (6 : t_u8) in
  let result := f_add (a) (b) in
  let _ := tt in
  result.
Lemma a_panicfree_function_ensures '(_ : unit) :
  let x := @a_panicfree_function '(_ : unit) in
  (false : bool) = true.
Proof. Admitted.

Definition another_panicfree_function '(_ : unit) : unit :=
  let not_much := (0 : t_i32) in
  let nothing := (0 : t_i32) in
  let still_not_much := f_add (not_much) (nothing) in
  tt.
Lemma another_panicfree_function_ensures '(_ : unit) :
  let x := @another_panicfree_function '(_ : unit) in
  (false : bool) = true.
Proof. Admitted.
