(* File automatically generated by Hacspec *)
From Coq Require Import ZArith.
Require Import List.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.
Require Import Ascii.
Require Import String.
Require Import Coq.Floats.Floats.
From RecordUpdate Require Import RecordSet.
Import RecordSetNotations.
From Core Require Import Core.

(* NotImplementedYet *)

Record Foo_record : Type :=
  {
    Foo_f_y : t_u8;
  }.


#[export] Instance settable_Foo_record : Settable _ :=
  settable! (Build_Foo_record) <Foo_f_y>.

Record S_record : Type :=
  {
    S_f_g : t_Foo;
  }.


#[export] Instance settable_S_record : Settable _ :=
  settable! (Build_S_record) <S_f_g>.

Record OtherS_record : Type :=
  {
    OtherS_f_g : t_Option ((t_Foo));
  }.


#[export] Instance settable_OtherS_record : Settable _ :=
  settable! (Build_OtherS_record) <OtherS_f_g>.

Definition impl_Foo__from (i : t_Foo) : t_Foo :=
  Foo (f_clone (f_y i)).

Record Error_record : Type :=
  {
  }.

#[export]
Notation "'Error_Error_record'" := Build_Error_record.

Definition impl_S__from (i : t_OtherS) : t_Result ((t_S)) ((t_Error)) :=
  run (let hoist49 := impl__ok_or (impl__as_ref (f_g i)) (Error) in
  Result_Ok (let hoist50 := impl_Foo__from (hoist49) in
  let hoist51 := S (hoist50) in
  Result_Ok (hoist51))).
