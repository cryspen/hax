(* File automatically generated by Hacspec *)
Set Warnings "-notation-overridden,-ambiguous-paths".
From Crypt Require Import choice_type Package Prelude.
Import PackageNotation.
From extructures Require Import ord fset.
From mathcomp Require Import word_ssrZ word.
(* From Jasmin Require Import word. *)

From Coq Require Import ZArith.
From Coq Require Import Strings.String.
Import List.ListNotations.
Open Scope list_scope.
Open Scope Z_scope.
Open Scope bool_scope.

From Hacspec Require Import ChoiceEquality.
From Hacspec Require Import LocationUtility.
From Hacspec Require Import Hacspec_Lib_Comparable.
From Hacspec Require Import Hacspec_Lib_Pre.
From Hacspec Require Import Hacspec_Lib.

Open Scope hacspec_scope.
Import choice.Choice.Exports.

From RecordUpdate Require Import RecordUpdate.

Import RecordSetNotations.

Obligation Tactic := (* try timeout 8 *) solve_ssprove_obligations.

(*Not implemented yet? todo(item)*)

Definition t_OpaqueStruct {v_X : both uint_size} {v_T : v_T} {v_U : v_U} : choice_type :=
  ⊥.

Definition t_OpaqueEnum {v_X : both uint_size} {v_T : v_T} {v_U : v_U} : choice_type :=
  ⊥.

Equations ff_generic {v_X : both uint_size} {v_T : v_T} {v_U : v_U} (x : both v_U) : both (t_OpaqueEnum (both uint_size) v_T v_U) :=
  ff_generic x  :=
    dropped_body : both (t_OpaqueEnum (both uint_size) v_T v_U).
Fail Next Obligation.

Equations f (x : both 'bool) (y : both 'bool) : both 'bool :=
  f x y  :=
    dropped_body : both 'bool.
Fail Next Obligation.

Equations ff_pre_post (x : both 'bool) (y : both 'bool) : both 'bool :=
  ff_pre_post x y  :=
    dropped_body : both 'bool.
Fail Next Obligation.

Class t_T (Self : choice_type) (v_Self : v_Self) := {
  f_U : choice_type ;
  f_c : (both int8) ;
  f_d : (both 'unit) ;
  f_m : (both v_Self -> both int8 -> both 'bool) ;
}.

#[global] Program Instance int8_t_T : t_T int8 :=
  _.
Fail Next Obligation.
Hint Unfold int8_t_T.

Class t_TrGeneric (Self : choice_type) (v_Self : v_Self) {v_U : v_U} `{ t_Clone v_U} := {
  f_f : (both v_U -> both v_Self) ;
}.

#[global] Program Instance int32_t_TrGeneric {v_U : v_U} `{ t_Clone v_U} : t_TrGeneric int32 v_U :=
  _.
Fail Next Obligation.
Hint Unfold int32_t_TrGeneric.

Equations v_C : both int8 :=
  v_C  :=
    dropped_body : both int8.
Fail Next Obligation.

Definition t_S1 : choice_type :=
  'unit.
Equations Build_t_S1 : both (t_S1) :=
  Build_t_S1  :=
    ret_both (tt (* Empty tuple *) : (t_S1)) : both (t_S1).
Fail Next Obligation.

Equations impl_S1__ff_s1 (_ : both 'unit) : both 'unit :=
  impl_S1__ff_s1 _  :=
    dropped_body : both 'unit.
Fail Next Obligation.

Definition t_S2 : choice_type :=
  'unit.
Equations Build_t_S2 : both (t_S2) :=
  Build_t_S2  :=
    ret_both (tt (* Empty tuple *) : (t_S2)) : both (t_S2).
Fail Next Obligation.

Equations impl_S2__ff_s2 (_ : both 'unit) : both 'unit :=
  impl_S2__ff_s2 _  :=
    dropped_body : both 'unit.
Fail Next Obligation.
