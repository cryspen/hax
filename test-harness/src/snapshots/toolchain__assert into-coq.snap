---
source: test-harness/src/harness.rs
expression: snapshot
info:
  kind:
    Translate:
      backend: coq
  info:
    name: assert
    manifest: assert/Cargo.toml
    description: ~
  spec:
    optional: false
    broken: false
    issue_id: ~
    positive: true
    snapshot:
      stderr: false
      stdout: true
    include_flag: ~
    backend_options: ~
---
exit = 0

[stdout]
diagnostics = []

[stdout.files]
"Assert.v" = '''
(* File automatically generated by Hacspec *)
From Coq Require Import ZArith.
Require Import List.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.
Require Import Ascii.
Require Import String.
Require Import Coq.Floats.Floats.
From RecordUpdate Require Import RecordSet.
Import RecordSetNotations.
From Core Require Import Core.



(* NotImplementedYet *)

Definition asserts '(_ : unit) : unit :=
  let _ := hax_lib.assert ((true : bool)) in
  let _ := hax_lib.assert (core.cmp.PartialEq__f_eq ((1 : t_i32)) ((1 : t_i32))) in
  let _ := match ((2 : t_i32),(2 : t_i32)) with
  | (left_val,right_val) =>
    hax_lib.assert (core.cmp.PartialEq__f_eq (left_val) (right_val))
  end in
  let _ := match ((1 : t_i32),(2 : t_i32)) with
  | (left_val,right_val) =>
    hax_lib.assert (core.ops.bit.Not__f_not (core.cmp.PartialEq__f_eq (left_val) (right_val)))
  end in
  tt.
'''
_CoqProject = '''
-R ./ TODO
-arg -w
-arg all

Assert.v'''
